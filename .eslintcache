[{"D:\\PROJECTS\\bs1front\\bs1\\src\\index.js":"1","D:\\PROJECTS\\bs1front\\bs1\\src\\App.js":"2","D:\\PROJECTS\\bs1front\\bs1\\src\\AppRouting.js":"3","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\printBill\\printBill.js":"4","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\resultForm\\resultForm.js":"5","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\dashboard\\dashboard.js":"6","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\invoiceForm\\invoiceForm.js":"7","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\resultCard\\resultCard.js":"8","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjects\\subjects.js":"9","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\login\\login.js":"10","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\viewBill\\viewBill.js":"11","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\viewResult\\viewResult.js":"12","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\forms\\forms.js":"13","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\notify.js":"14","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\invoice\\invoice.js":"15","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\rightPanel\\rightPanel.js":"16","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\header\\header.js":"17","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\httpClient.js":"18","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjectDetails\\subjectDetails.js":"19","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\leftPanel\\leftPanel.js":"20","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\transaction\\transaction.js":"21","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\result\\result.js":"22","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjectTable\\subjectTable.js":"23","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\loader\\loader.js":"24","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\moment.js":"25","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\marksheet\\marksheet.js":"26","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\signTable\\signTable.js":"27","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\sheetTable\\sheetTable.js":"28","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\grade.js":"29","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\GPATable\\GPATable.js":"30","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\gradetoGPA.js":"31","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\mpg.js":"32","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\newResult\\newResult.js":"33","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\newResult\\temporaryResult.js":"34","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\configure\\configure.js":"35","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\student\\student.js":"36","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\studentDetails\\studentDetails.js":"37","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\studentTable\\studentTable.js":"38","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\attendance\\attendance.js":"39","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\attendanceForm\\attendanceForm.js":"40"},{"size":391,"mtime":1610196736212,"results":"41","hashOfConfig":"42"},{"size":273,"mtime":1616407172234,"results":"43","hashOfConfig":"42"},{"size":2450,"mtime":1659330573642,"results":"44","hashOfConfig":"42"},{"size":11074,"mtime":1617354598687,"results":"45","hashOfConfig":"42"},{"size":968,"mtime":1613132387773,"results":"46","hashOfConfig":"42"},{"size":935,"mtime":1617726624535,"results":"47","hashOfConfig":"42"},{"size":1044,"mtime":1613132462926,"results":"48","hashOfConfig":"42"},{"size":14823,"mtime":1630514110917,"results":"49","hashOfConfig":"42"},{"size":936,"mtime":1657610416329,"results":"50","hashOfConfig":"42"},{"size":2283,"mtime":1617544308875,"results":"51","hashOfConfig":"42"},{"size":925,"mtime":1613132201022,"results":"52","hashOfConfig":"42"},{"size":1053,"mtime":1615374091637,"results":"53","hashOfConfig":"42"},{"size":10734,"mtime":1659331507335,"results":"54","hashOfConfig":"42"},{"size":186,"mtime":1612867692570,"results":"55","hashOfConfig":"42"},{"size":15393,"mtime":1617354704304,"results":"56","hashOfConfig":"42"},{"size":1977,"mtime":1634105480533,"results":"57","hashOfConfig":"42"},{"size":2695,"mtime":1613131773303,"results":"58","hashOfConfig":"42"},{"size":480,"mtime":1617527783949,"results":"59","hashOfConfig":"42"},{"size":3790,"mtime":1617802769329,"results":"60","hashOfConfig":"42"},{"size":8591,"mtime":1659330680254,"results":"61","hashOfConfig":"42"},{"size":5912,"mtime":1617726798605,"results":"62","hashOfConfig":"42"},{"size":10836,"mtime":1617802468667,"results":"63","hashOfConfig":"42"},{"size":8121,"mtime":1657737528417,"results":"64","hashOfConfig":"42"},{"size":275,"mtime":1612518658916,"results":"65","hashOfConfig":"42"},{"size":328,"mtime":1612773910497,"results":"66","hashOfConfig":"42"},{"size":16715,"mtime":1657793076247,"results":"67","hashOfConfig":"42"},{"size":3154,"mtime":1618304503399,"results":"68","hashOfConfig":"42"},{"size":4993,"mtime":1659262534855,"results":"69","hashOfConfig":"42"},{"size":690,"mtime":1657793794093,"results":"70","hashOfConfig":"42"},{"size":27310,"mtime":1651481422565,"results":"71","hashOfConfig":"42"},{"size":453,"mtime":1617639627197,"results":"72","hashOfConfig":"42"},{"size":1997,"mtime":1657793901265,"results":"73","hashOfConfig":"42"},{"size":9308,"mtime":1657284883750,"results":"74","hashOfConfig":"42"},{"size":16624,"mtime":1659339628083,"results":"75","hashOfConfig":"42"},{"size":2804,"mtime":1657621449716,"results":"76","hashOfConfig":"42"},{"size":667,"mtime":1657626401951,"results":"77","hashOfConfig":"42"},{"size":4030,"mtime":1657708166375,"results":"78","hashOfConfig":"42"},{"size":6735,"mtime":1657741354847,"results":"79","hashOfConfig":"42"},{"size":674,"mtime":1659331654029,"results":"80","hashOfConfig":"42"},{"size":5890,"mtime":1659340021461,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1uemo2r",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROJECTS\\bs1front\\bs1\\src\\index.js",[],["171","172"],"D:\\PROJECTS\\bs1front\\bs1\\src\\App.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\AppRouting.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\printBill\\printBill.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\resultForm\\resultForm.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\dashboard\\dashboard.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\invoiceForm\\invoiceForm.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\resultCard\\resultCard.js",["173","174","175","176"],"import './resultCard.css';\r\nimport ReactWaterMark from 'react-watermark-component';\r\nimport React from 'react';\r\nimport logo from './../../images/logo.png';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Axios from 'axios'\r\n\r\nclass ResultCardWithoutRouter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            marksInfo: [],\r\n            result: {\r\n                fullMarksArray: []\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        Axios.get(`${process.env.REACT_APP_HOST}/result/${this.props.match.params.id}`)\r\n            .then(data => {\r\n                this.setState(preState => {\r\n                    return {\r\n                        ...preState,\r\n                        result: data.data.data.data,\r\n                        marksInfo: data.data.data.data.marksInfo\r\n\r\n                    }\r\n                }, () => {\r\n                    if (!this.props.view) {\r\n                        window.print()\r\n                    }\r\n                })\r\n            }).catch(e => console.log(e.response))\r\n    }\r\n    render() {\r\n        console.log(this.state.marksInfo)\r\n        const text = `Buddha Addharsha`;\r\n        const beginAlarm = function () { console.log('start alarm'); };\r\n        const options = {\r\n            chunkWidth: 200,\r\n            chunkHeight: 60,\r\n            textAlign: 'left',\r\n            textBaseline: 'bottom',\r\n            globalAlpha: 0.17,\r\n            font: '18px Microsoft Yahei',\r\n            rotateAngle: -0.26,\r\n            fillStyle: '#07ad94'\r\n        }\r\n        return (<>\r\n            <div className=\"\">\r\n                {/* <ReactWaterMark waterMarkText={text}\r\n                    openSecurityDefense\r\n                    securityAlarm={beginAlarm}\r\n                    options={options}> */}\r\n\r\n\r\n                <div style={{marginTop:'80px'}} className=\"wrapper row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body p-0\">\r\n                                <h1 className=\"text-center p-2\">BUDDHA &nbsp; ADARSHA &nbsp; BOARDING &nbsp; SCHOOL</h1>\r\n                                <h2 className=\"text-center p-2\"> DHARAN-9, DIP PATH, SUNSARI, KOSHI, NEPAL</h2>\r\n                                <h2 className=\"text-center p-2\">FINAL TERM EXAM 2078 BS</h2>\r\n                                {/* {this.state.result.term}   */}\r\n                                <div className=\"row p-2\">\r\n                                    <div className=\"col-md-5 text-center\">\r\n                                        <img src={logo} alt=\"Logo\" />\r\n                                    </div>\r\n                                    <div className=\"col-md-7 text-left\">\r\n                                        <h2>GRADE SHEET</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row  p-5\">\r\n                                    <div className=\"col-md-1\">\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <p className=\"mb-1 text-left\">Class: {this.state.result.class}</p>\r\n                                        <br />\r\n                                        <p className=\"mb-1 text-left\">Name: {this.state.result.Name}</p>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-4 text-right\">\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-3 text-left\">\r\n                                        <p>Roll No: {this.state.result.Roll}</p>\r\n\r\n                                        <p>A.Y. {this.state.result.annualYear}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row p-1\">\r\n                                    <div className=\"col-md-1\"></div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <table className=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Subjects</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Total Marks</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Marks Obtained</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">GPA</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Grade</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.marksInfo.map((markInfo, index) => {\r\n                                                    return (\r\n                                                        <tr style={this.state.result.subjectsArray.length > 8 ? { font: \"small-caption\" } : null} key={index}>\r\n                                                            <td className=\"text-center\">{this.state.result.subjectsArray[index]}</td>\r\n                                                            <td className=\"text-center\">{this.state.result.fullMarksArray[index]}</td>\r\n                                                            <td className=\"text-center\">{markInfo[this.state.result.subjectsArray[index]].marks}</td>\r\n                                                            <td className=\"text-center\">{markInfo[this.state.result.subjectsArray[index]].gpa}</td>\r\n                                                            <td className=\"text-center\">{markInfo[this.state.result.subjectsArray[index]].grade}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n\r\n                                                <tr>\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Total</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">{this.state.result.totalMarks}</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">{this.state.result.Total}</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\"></th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">{this.state.result.AvgGrade}</th>\r\n                                                </tr>\r\n                                                \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\"></div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row p-5\">\r\n                                <div className=\"col-md-1\">\r\n\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n\r\n\r\n                                </div>\r\n                                <div className=\"col-md-4 \">\r\n\r\n                                    <p className=\"mb-1 text-left\">Total GPA Obtained: &nbsp;&nbsp;&nbsp;&nbsp; <span style={{ fontWeight: 'bold' }}>{this.state.result.AvgGPA}</span></p>\r\n                                    <br />\r\n                                    <p className=\"mb-1 text-left\">Percentage: &nbsp;&nbsp;&nbsp;&nbsp;   <span style={{ fontWeight: 'bold' }}>  {this.state.result.percentage}%</span></p><br />\r\n                                    <p className=\"mb-1 text-left\">Attendance:   &nbsp;&nbsp;&nbsp;&nbsp;  {this.state.result.rank}</p>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row \" style={{ marginTop: '30px' }}>\r\n                                <div className=\"col-md-1\"></div>\r\n                                <div className=\"col-md-1\"></div>\r\n                                <div className=\"col-md-2 bt\">\r\n                                    <p className=\"text-center\">Principal</p>\r\n                                </div>\r\n                                <div className=\"col-md-1\"></div>\r\n\r\n                                <div className=\"col-md-2 bt\">\r\n                                    <p className=\"text-center\">School's Seal</p>\r\n                                </div>\r\n                                <div className=\"col-md-1\"></div>\r\n                                <div className=\"col-md-2 bt\">\r\n                                    <p className=\"text-center\">Class Teacher</p>\r\n                                </div>\r\n                                <div className=\"col-md-1\"></div>\r\n                                <div className=\"col-md-1\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* </ReactWaterMark> */}\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <div style={{border:'none'}} className=\"wrapper row\">\r\n                    <div className=\"col-12\">\r\n                        <div className='card'>\r\n\r\n                            <div className=\"row p-5\">\r\n                                <div className=\"col-md-1\">\r\n\r\n                                </div>\r\n\r\n                                <div className=\"col-md-10 sm-table\">\r\n                                    <p className=\"text-center\">Marks and Grade Points</p>\r\n                                    <table className=\"table large\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Percentage(%)</th>\r\n                                                <th>Grade</th>\r\n                                                <th>Point</th>\r\n                                                <th>Remarks</th>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>90-100</td>\r\n                                                <td>A+</td>\r\n                                                <td>4.0</td>\r\n                                                <td>Outstanding</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>80-90</td>\r\n                                                <td>A</td>\r\n                                                <td>3.6</td>\r\n                                                <td>Excellent</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>70-80</td>\r\n                                                <td>B+</td>\r\n                                                <td>3.2</td>\r\n                                                <td>Very Good</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>60-70</td>\r\n                                                <td>B</td>\r\n                                                <td>2.8</td>\r\n                                                <td>good</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>50-60</td>\r\n                                                <td>C+</td>\r\n                                                <td>2.4</td>\r\n                                                <td>Satisfactory</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>40-50</td>\r\n                                                <td>C</td>\r\n                                                <td>2</td>\r\n                                                <td>Acceptable</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>30-40</td>\r\n                                                <td>D+</td>\r\n                                                <td>1.6</td>\r\n                                                <td>Partly Acceptable</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>20-30</td>\r\n                                                <td>D</td>\r\n                                                <td>1.2</td>\r\n                                                <td>Insufficient</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                                <div className=\"col-md-1 text-left\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport const ResultCard = withRouter(ResultCardWithoutRouter);","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjects\\subjects.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\login\\login.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\viewBill\\viewBill.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\viewResult\\viewResult.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\forms\\forms.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\util\\notify.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\invoice\\invoice.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\rightPanel\\rightPanel.js",["177","178"],"import React from 'react';\r\nimport { Result } from '../../result/result';\r\nimport { Transaction } from '../../transaction/transaction';\r\nimport { Header } from '../header/header';\r\nimport { Marksheet } from './../../marksheet/marksheet';\r\n\r\n\r\nexport class RightPanel extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      component: 'transaction'\r\n    }\r\n  }\r\n  handleTransaction = () => {\r\n    this.setState({\r\n      component: 'transaction'\r\n    })\r\n  }\r\n  handleResult = () => {\r\n    this.setState({\r\n      component: 'result'\r\n    })\r\n  }\r\n  handleMarksheet = () => {\r\n    this.setState({\r\n      component: 'marksheet'\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.result==='result') {\r\n      this.setState({\r\n        component: 'result'\r\n      })\r\n    }\r\n    else if(this.props.result === 'marksheet') {\r\n      this.setState({\r\n        component: 'marksheet'\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let activebutton = 'btn-primary active';\r\n    let component = this.state.component;\r\n    switch (component) {\r\n      // case 'result':\r\n      //   component = (<Result></Result>)\r\n      //   break;\r\n      // case 'transaction':\r\n      //   component = (<Transaction></Transaction>)\r\n      //   break;\r\n      default:\r\n        component = (<Marksheet></Marksheet>)\r\n    }\r\n    return (\r\n      <div id=\"right-panel\" className=\"right-panel\">\r\n        <Header sidebar={this.props.changeSidebar} ></Header>\r\n        <div className=\"content\">\r\n          {/* <button onClick={this.handleTransaction} className={`btn m-1 ${this.state.component === 'transaction' ? activebutton : null}`} >Transactions</button>\r\n          <button onClick={this.handleResult} className={`btn m-1 ${this.state.component === 'result' ? activebutton : null}`}>Result</button> */}\r\n          <button onClick={this.handleMarksheet} className={`btn m-1 ${ activebutton}`}>Marksheet</button>\r\n          {component}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\header\\header.js",["179","180","181","182","183","184","185","186"],"import React from 'react';\r\nimport logo from './../../../images/logo.png';\r\nimport './header.css';\r\n\r\nexport class Header extends React.Component {\r\n    constructor() {\r\n        super();\r\n      \r\n    }\r\n\r\n    clickHandler=()=>{\r\n        this.props.sidebar();\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <header id=\"header\" className=\"header\">\r\n                <div className=\"top-left\">\r\n                    <div className=\"navbar-header\">\r\n                        {/* <img className=\"user-avatar rounded-circle\" src={logo} alt=\"User Avatar\" /> */}\r\n                        {/* <a className=\"navbar-brand logo\" href=\"./\"><img  className=\"logo\" src={logo} alt=\"Logo\" /></a> */}\r\n                        <a onClick={this.clickHandler} id=\"menuToggle\" className=\"menutoggle\"><i className=\"fa fa-bars\" /></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"top-right\">\r\n                    <div className=\"header-menu\">\r\n                        <div className=\"header-left\">\r\n                            <button className=\"search-trigger\"><i className=\"fa fa-search\" /></button>\r\n                            <div className=\"form-inline\">\r\n                                <form className=\"search-form\">\r\n                                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search ...\" aria-label=\"Search\" />\r\n                                    <button className=\"search-close\" type=\"submit\"><i className=\"fa fa-close\" /></button>\r\n                                </form>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"user-area dropdown float-right\">\r\n                            <a href=\"#\" className=\"dropdown-toggle active\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <img className=\"user-avatar rounded-circle\" src={logo} alt=\"User Avatar\" />\r\n                            </a>\r\n                            <div className=\"user-menu dropdown-menu\">\r\n                                <a className=\"nav-link\" href=\"#\"><i className=\"fa fa- user\" />My Profile</a>\r\n                                <a className=\"nav-link\" href=\"#\"><i className=\"fa fa- user\" />Notifications <span className=\"count\">13</span></a>\r\n                                <a className=\"nav-link\" href=\"#\"><i className=\"fa fa -cog\" />Settings</a>\r\n                                <a className=\"nav-link\" href=\"#\"><i className=\"fa fa-power -off\" />Logout</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\httpClient.js",["187"],"import axios from 'axios';\r\n\r\nconst headers = {\r\n    \"Content-Type\": 'application/json',\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n}\r\n\r\nconst http = axios.create({\r\n    baseURL: process.env.REACT_APP_HOST,\r\n    responseType: 'json'\r\n})\r\n\r\nfunction get(url,params={}){\r\n    return http.get(url,{\r\n        headers\r\n    })\r\n}\r\n\r\nfunction post(url,data,params={}){\r\n    return http.post(url,data,{\r\n        headers,\r\n        params\r\n    })\r\n}\r\n\r\nexport default {\r\n    get,\r\n    post\r\n}","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjectDetails\\subjectDetails.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\leftPanel\\leftPanel.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\transaction\\transaction.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\result\\result.js",["188"],"import React from 'react';\r\nimport Axios from 'axios';\r\nimport { Loader } from '../common/loader/loader';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { util } from './../../util/moment';\r\nimport { notify } from '../../util/notify';\r\n\r\nclass ResultWithoutRouter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            results: [],\r\n            isLoading: false,\r\n            class: 'All'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(prevState => {\r\n            return {\r\n                isLoading: !prevState.isLoading\r\n            }\r\n        }, () => {\r\n            Axios.get(`${process.env.REACT_APP_HOST}/result`)\r\n                .then(data => {\r\n                    const results = data.data.data;\r\n                    this.setState({\r\n                        results\r\n                    })\r\n\r\n                }).catch(err => {\r\n                    console.log(err.response)\r\n                }).finally(() => {\r\n                    this.setState((prevState) => {\r\n                        return {\r\n                            isLoading: !prevState.isLoading\r\n                        }\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n    handleClick = (id) => {\r\n        this.props.history.push(`/result/${id}`);\r\n    }\r\n\r\n    handlePrint = (id) => {\r\n        this.props.history.push(`/printResult/${id}`)\r\n    }\r\n    handleClass = (value) => {\r\n        this.setState(() => {\r\n            return {\r\n                isLoading: true\r\n            }\r\n        }, async () => {\r\n            try {\r\n                const { data } = await Axios.get(`${process.env.REACT_APP_HOST}/result/class/${value}`)\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        ...prevState,\r\n                        class: value,\r\n                        results: data,\r\n                        isLoading: false\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        })\r\n    }\r\n    handleAll = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isLoading: !prevState.isLoading\r\n            }\r\n        }, () => {\r\n            Axios.get(`${process.env.REACT_APP_HOST}/result`)\r\n                .then(data => {\r\n                    const results = data.data.data;\r\n                    this.setState({\r\n                        results\r\n                    })\r\n\r\n                }).catch(err => {\r\n                    console.log(err.response)\r\n                }).finally(() => {\r\n                    this.setState((prevState) => {\r\n                        return {\r\n                            ...prevState,\r\n                            class: 'All',\r\n                            isLoading: !prevState.isLoading\r\n                        }\r\n                    })\r\n                })\r\n        })\r\n    }\r\n    handleDelete = async (id) => {\r\n        try {\r\n            const check = window.confirm('Are you sure you want to delete?');\r\n            if (check) {\r\n                const result = await Axios.delete(`${process.env.REACT_APP_HOST}/result/delete/${id}`)\r\n                notify.success(result.data.msg)\r\n                if (this.state.class !== 'All') {\r\n                    const { data } = await Axios.get(`${process.env.REACT_APP_HOST}/result/class/${this.state.class}`)\r\n                    this.setState((prevState) => {\r\n                        return {\r\n                            ...prevState,\r\n                            results: data,\r\n                        }\r\n                    })\r\n                } else {\r\n                    Axios.get(`${process.env.REACT_APP_HOST}/result`)\r\n                        .then(data => {\r\n                            const results = data.data.data;\r\n                            this.setState({\r\n                                results\r\n                            })\r\n\r\n                        }).catch(err => {\r\n                            console.log(err.response)\r\n                        }).finally(() => {\r\n                            this.setState((prevState) => {\r\n                                return {\r\n                                    ...prevState,\r\n                                    class: 'All'\r\n                                }\r\n                            })\r\n                        })\r\n\r\n            }\r\n        } else {\r\n            return\r\n        }\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\nrender() {\r\n\r\n    const tableContent = this.state.results.map((result, index) => {\r\n        return (<tr key={result._id}>\r\n            <td className=\"serial\">{index + 1}</td>\r\n\r\n            <td>{result.data.Name} </td>\r\n            <td>{result.data.term}</td>\r\n            <td>{result.data.class}</td>\r\n            <td>{result.data.Roll}</td>\r\n            <td>{result.data.AvgGPA}</td>\r\n            <td>{result.data.AvgGrade}</td>\r\n            <td>{result.data.percentage} %</td>\r\n            <td>\r\n                <span onClick={this.handleClick.bind(this, result._id)} className=\"badge badge-complete\">Details</span>\r\n            </td>\r\n\r\n            <td>\r\n                <button onClick={this.handlePrint.bind(this, result._id)} className=\"btn btn-info\">Print</button>\r\n                <button onClick={this.handleDelete.bind(this, result._id)} className=\"btn btn-danger m-1\">Delete</button>\r\n\r\n            </td>\r\n\r\n        </tr>)\r\n    })\r\n\r\n    let activebutton = 'btn-primary active';\r\n    return (\r\n        this.state.isLoading ?\r\n            <Loader></Loader> :\r\n            (<div className=\"orders\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4\">\r\n\r\n                    </div> {/* /.col-md-4 */}\r\n                    <div className=\"col-xl-4\">\r\n\r\n                    </div> {/* /.col-md-4 */}\r\n                    <div className=\"col-xl-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-xl-12\">\r\n                                <div className=\"card bg-flat-color-3  \">\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title m-0  white-color \">Today's Date: </h4>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div id=\"flotLine5\" className=\"flot-line\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> {/* /.col-md-4 */}\r\n                </div>\r\n\r\n                <div className=\"row \" style={{ marginBottom: \"10px\" }}>\r\n                    <div className=\"col-lg-12 col-xl-12\">\r\n                        <button onClick={this.handleAll} className={`btn m-1 ${this.state.class === 'All' ? activebutton : null}`}>All</button>\r\n                        <button onClick={this.handleClass.bind(this, 'Nursery')} className={`btn m-1 ${this.state.class === 'Nursery' ? activebutton : null}`}>Nursery</button>\r\n                        <button onClick={this.handleClass.bind(this, 'KG')} className={`btn m-1 ${this.state.class === 'KG' ? activebutton : null}`}>KG</button>\r\n                        <button onClick={this.handleClass.bind(this, '1')} className={`btn m-1 ${this.state.class === '1' ? activebutton : null}`}>1</button>\r\n                        <button onClick={this.handleClass.bind(this, '2')} className={`btn m-1 ${this.state.class === '2' ? activebutton : null}`}>2</button>\r\n                        <button onClick={this.handleClass.bind(this, '3')} className={`btn m-1 ${this.state.class === '3' ? activebutton : null}`}>3</button>\r\n                        <button onClick={this.handleClass.bind(this, '4')} className={`btn m-1 ${this.state.class === '4' ? activebutton : null}`}>4</button>\r\n                        <button onClick={this.handleClass.bind(this, '5')} className={`btn m-1 ${this.state.class === '5' ? activebutton : null}`}>5</button>\r\n                        <button onClick={this.handleClass.bind(this, '6')} className={`btn m-1 ${this.state.class === '6' ? activebutton : null}`}>6</button>\r\n                        <button onClick={this.handleClass.bind(this, '7')} className={`btn m-1 ${this.state.class === '7' ? activebutton : null}`}>7</button>\r\n                        <button onClick={this.handleClass.bind(this, '8')} className={`btn m-1 ${this.state.class === '8' ? activebutton : null}`}>8</button>\r\n                        <button onClick={this.handleClass.bind(this, '9')} className={`btn m-1 ${this.state.class === '9' ? activebutton : null}`}>9</button>\r\n                        <button onClick={this.handleClass.bind(this, '10')} className={`btn m-1 ${this.state.class === '10' ? activebutton : null}`}>10</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"box-title\">Result</h4>\r\n                            </div>\r\n                            <div className=\"card-body--\">\r\n                                <div className=\"table-stats order-table ov-h\">\r\n                                    <table className=\"table \">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"serial\">SN</th>\r\n\r\n\r\n                                                <th>Name</th>\r\n                                                <th>Term</th>\r\n                                                <th>Class</th>\r\n                                                <th>Roll No</th>\r\n                                                <th>Avg GPA</th>\r\n                                                <th>Avg Grade</th>\r\n                                                <th>Percentage</th>\r\n                                                <th>Details</th>\r\n\r\n                                                <th>More</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {tableContent}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div> {/* /.table-stats */}\r\n                            </div>\r\n                        </div> {/* /.card */}\r\n                    </div>  {/* /.col-lg-8 */}\r\n\r\n                </div>\r\n            </div>)\r\n    )\r\n}\r\n}\r\n\r\nexport const Result = withRouter(ResultWithoutRouter);","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjectTable\\subjectTable.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\loader\\loader.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\util\\moment.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\marksheet\\marksheet.js",["189"],"import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Loader } from \"../common/loader/loader\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { notify } from \"../../util/notify\";\r\nimport Modal from \"react-modal\";\r\n\r\nclass MarksheetWithoutRouter extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      results: [\r\n        {\r\n          marksInfo: {},\r\n        },\r\n      ],\r\n      isLoading: false,\r\n      class: \"Nursery\",\r\n      subjects: [\r\n        {\r\n          Name: \"\",\r\n        },\r\n      ],\r\n      modalIsOpen: false,\r\n      currentResult: {\r\n        marksInfo: {},\r\n        index: \"\",\r\n      },\r\n      fullMarks: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(\r\n      (prevState) => {\r\n        return {\r\n          isLoading: !prevState.isLoading,\r\n        };\r\n      },\r\n      () => {\r\n        Axios.get(`${process.env.REACT_APP_HOST}/marksheet/${this.state.class}`)\r\n          .then(async (data) => {\r\n            const subjectData = await Axios.get(\r\n              `${process.env.REACT_APP_HOST}/subject/${this.state.class}`\r\n            );\r\n            const subjects = subjectData.data.data;\r\n            let newFullMarks = {};\r\n            subjects.forEach((subject) => {\r\n              newFullMarks[subject.Name] = subject.FullMarks;\r\n            });\r\n            const results = data.data.data;\r\n            this.setState({\r\n              results,\r\n              subjects,\r\n              fullMarks: newFullMarks,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response);\r\n          })\r\n          .finally(() => {\r\n            this.setState((prevState) => {\r\n              return {\r\n                isLoading: !prevState.isLoading,\r\n              };\r\n            });\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePrint = async (id) => {\r\n    try {\r\n      const check = window.confirm(\"Are you sure you want to delete?\");\r\n      if (check) {\r\n        const prevClass = this.state.class;\r\n        await Axios.delete(\r\n          `${process.env.REACT_APP_HOST}/marksheet/delete/${id}`\r\n        );\r\n        notify.success(\"Succesfully Deleted\");\r\n        const { data } = await Axios.get(\r\n          `${process.env.REACT_APP_HOST}/marksheet/${prevClass}`\r\n        );\r\n        const results = data.data;\r\n        this.setState((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            results,\r\n            class: prevClass,\r\n          };\r\n        });\r\n      } else {\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  handleClass = (value) => {\r\n    this.setState(\r\n      () => {\r\n        return {\r\n          isLoading: true,\r\n        };\r\n      },\r\n      async () => {\r\n        try {\r\n          const subjectData = await Axios.get(\r\n            `${process.env.REACT_APP_HOST}/subject/${value}`\r\n          );\r\n          const subjects = subjectData.data.data;\r\n          const { data } = await Axios.get(\r\n            `${process.env.REACT_APP_HOST}/marksheet/${value}`\r\n          );\r\n          const results = data.data;\r\n          let newFullMarks = {};\r\n          subjects.map((subject) => {\r\n            newFullMarks[subject.Name] = subject.FullMarks;\r\n          });\r\n          this.setState((preState) => {\r\n            return {\r\n              ...preState,\r\n              class: value,\r\n              results,\r\n              subjects,\r\n              fullMarks: newFullMarks,\r\n              isLoading: false,\r\n            };\r\n          });\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleEdit = async () => {\r\n    try {\r\n      const editedData = this.state.currentResult;\r\n      editedData.fullMarks = this.state.fullMarks;\r\n      const res = await Axios.put(\r\n        `${process.env.REACT_APP_HOST}/marksheet/edit/${editedData._id}`,\r\n        editedData,\r\n        {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          responseType: \"json\",\r\n        }\r\n      );\r\n      notify.success(res.data.msg);\r\n      const { data } = await Axios.get(\r\n        `${process.env.REACT_APP_HOST}/marksheet/${this.state.class}`\r\n      );\r\n      const results = data.data;\r\n      this.setState((preState) => {\r\n        return {\r\n          ...preState,\r\n          modalIsOpen: false,\r\n          results,\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  openModal = (index) => {\r\n    this.setState((preState) => {\r\n      return {\r\n        ...preState,\r\n        modalIsOpen: true,\r\n        currentResult: {\r\n          ...preState.results[index],\r\n        },\r\n      };\r\n    });\r\n  };\r\n  closeModal = () => {\r\n    this.setState((preState) => {\r\n      return {\r\n        ...preState,\r\n        modalIsOpen: false,\r\n      };\r\n    });\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState((preState) => {\r\n      return {\r\n        ...preState,\r\n        currentResult: {\r\n          ...preState.currentResult,\r\n          [name]: value,\r\n          marksInfo: {\r\n            ...preState.currentResult.marksInfo,\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n  handleMarks = (subjectName, fullMarks, e) => {\r\n    const { name, value } = e.target;\r\n    this.setState((preState) => {\r\n      return {\r\n        ...preState,\r\n        currentResult: {\r\n          ...preState.currentResult,\r\n          marksInfo: {\r\n            ...preState.currentResult.marksInfo,\r\n            [subjectName]: {\r\n              ...preState.currentResult.marksInfo[subjectName],\r\n              [name]: value,\r\n              fullMarks,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.history.push(`/sheet?class=${this.state.class}`);\r\n  };\r\n\r\n  handleDoublePrint = () => {\r\n    this.props.history.push(\r\n      `/newResult2?&${this.state.class}&${this.state.currentResult.index}`\r\n    );\r\n  };\r\n  render() {\r\n    console.log(this.state);\r\n    const customStyles = {\r\n      content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"20%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        overflowY: \"auto\",\r\n      },\r\n    };\r\n\r\n    const tableHeadContent = this.state.subjects.map((subject) => {\r\n      return <th key={subject._id}>{subject.Name}</th>;\r\n    });\r\n\r\n    const tableContent = this.state.results.map((result, index) => {\r\n      return (\r\n        <tr key={result._id}>\r\n          <td>{result.Roll}</td>\r\n          <td>{result.Name} </td>\r\n\r\n          {this.state.subjects.map(({ Name, _id, FullMarks }) => {\r\n            return (\r\n              <td key={_id}>\r\n                {FullMarks === \"Grade\"\r\n                  ? result.marksInfo[Name]?.grade\r\n                  : +result.marksInfo[Name]?.exam +\r\n                    (result.marksInfo[Name]?.test\r\n                      ? +result.marksInfo[Name].test\r\n                      : 0)}\r\n              </td>\r\n            );\r\n          })}\r\n\r\n          <td>{result.percentage}%</td>\r\n          <td>\r\n            <button\r\n              onClick={this.openModal.bind(this, index)}\r\n              className=\"btn btn-info m-1\"\r\n            >\r\n              Edit\r\n            </button>\r\n\r\n            <button\r\n              onClick={this.handlePrint.bind(this, result._id)}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    let activebutton = \"btn-primary active\";\r\n    return this.state.isLoading ? (\r\n      <Loader></Loader>\r\n    ) : (\r\n      <>\r\n        <div className=\"orders\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-4\"></div> {/* /.col-md-4 */}\r\n            <div className=\"col-xl-4\"></div> {/* /.col-md-4 */}\r\n            <div className=\"col-xl-4\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12 col-xl-12\">\r\n                  <div className=\"card bg-flat-color-3  \">\r\n                    <div className=\"card-body\">\r\n                      <h4 className=\"card-title m-0  white-color \">\r\n                        Today's Date:{\" \"}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div id=\"flotLine5\" className=\"flot-line\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>{\" \"}\r\n            {/* /.col-md-4 */}\r\n          </div>\r\n          <div className=\"row \" style={{ marginBottom: \"10px\" }}>\r\n            <div className=\"col-lg-12 col-xl-12\">\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"Nursery\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"Nursery\" ? activebutton : null\r\n                }`}\r\n              >\r\n                Nursery\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"KG\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"KG\" ? activebutton : null\r\n                }`}\r\n              >\r\n                KG\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"1\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"1\" ? activebutton : null\r\n                }`}\r\n              >\r\n                1\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"2\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"2\" ? activebutton : null\r\n                }`}\r\n              >\r\n                2\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"3\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"3\" ? activebutton : null\r\n                }`}\r\n              >\r\n                3\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"4\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"4\" ? activebutton : null\r\n                }`}\r\n              >\r\n                4\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"5\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"5\" ? activebutton : null\r\n                }`}\r\n              >\r\n                5\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"6\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"6\" ? activebutton : null\r\n                }`}\r\n              >\r\n                6\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"7\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"7\" ? activebutton : null\r\n                }`}\r\n              >\r\n                7\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"8\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"8\" ? activebutton : null\r\n                }`}\r\n              >\r\n                8\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"9\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"9\" ? activebutton : null\r\n                }`}\r\n              >\r\n                9\r\n              </button>\r\n              <button\r\n                onClick={this.handleClass.bind(this, \"10\")}\r\n                className={`btn m-1 ${\r\n                  this.state.class === \"10\" ? activebutton : null\r\n                }`}\r\n              >\r\n                10\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"index\"\r\n                    onChange={this.handleChange}\r\n                    class=\"form-control\"\r\n                    style={{ maxWidth: \"7%\" }}\r\n                  />\r\n                  <button\r\n                    onClick={this.handleDoublePrint}\r\n                    className=\"btn btn-info m-1\"\r\n                  >\r\n                    Print\r\n                  </button>\r\n                  <button\r\n                    onClick={this.handleClick}\r\n                    className={`btn btn-success`}\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    View Marksheet\r\n                  </button>\r\n                </div>\r\n                <div className=\"card-body--\">\r\n                  <div className=\"table-stats order-table ov-h\">\r\n                    <table className=\"table \">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Roll</th>\r\n                          <th>Name</th>\r\n\r\n                          {tableHeadContent}\r\n                          <th>Percent</th>\r\n                          <th>More</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>{tableContent}</tbody>\r\n                    </table>\r\n                  </div>{\" \"}\r\n                  {/* /.table-stats */}\r\n                </div>\r\n              </div>{\" \"}\r\n              {/* /.card */}\r\n            </div>{\" \"}\r\n            {/* /.col-lg-8 */}\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Edit Marksheet\"\r\n        >\r\n          {/* <h2 ref={_subtitle => (subtitle = _subtitle)}>Hello</h2> */}\r\n\r\n          <form className=\"form-group\">\r\n            <div className=\"row\">\r\n              {this.state.subjects.map((subject) => {\r\n                return (\r\n                  <div className=\"col-4\">\r\n                    <label>\r\n                      <h5 className=\"pt-1\">{subject.Name}</h5>\r\n                    </label>\r\n                    {subject.FullMarks === \"Grade\" ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        onChange={this.handleMarks.bind(\r\n                          \"this\",\r\n                          subject.Name,\r\n                          subject.FullMarks\r\n                        )}\r\n                        name=\"grade\"\r\n                        defaultValue={\r\n                          this.state.currentResult.marksInfo[subject.Name]\r\n                            ?.grade\r\n                        }\r\n                        className=\"form-control\"\r\n                      ></input>\r\n                    ) : (\r\n                      <>\r\n                        <p>Exam</p>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={this.handleMarks.bind(\r\n                            \"this\",\r\n                            subject.Name,\r\n                            subject.FullMarks\r\n                          )}\r\n                          name=\"exam\"\r\n                          defaultValue={\r\n                            this.state.currentResult.marksInfo[subject.Name]\r\n                              ?.exam\r\n                          }\r\n                          className=\"form-control mb-2\"\r\n                        ></input>\r\n\r\n                        <p>Test</p>\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={this.handleMarks.bind(\r\n                            \"this\",\r\n                            subject.Name,\r\n                            subject.FullMarks\r\n                          )}\r\n                          name=\"test\"\r\n                          defaultValue={\r\n                            this.state.currentResult.marksInfo[subject.Name]\r\n                              ?.test\r\n                          }\r\n                          className=\"form-control\"\r\n                        ></input>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </form>\r\n          <button className=\"btn btn-warning\" onClick={this.handleEdit}>\r\n            Save Changes\r\n          </button>\r\n          <button className=\"btn btn-danger m-1\" onClick={this.closeModal}>\r\n            Close\r\n          </button>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Marksheet = withRouter(MarksheetWithoutRouter);\r\n","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\signTable\\signTable.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\sheetTable\\sheetTable.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\util\\grade.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\GPATable\\GPATable.js",["190"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport \"./GPATable.css\";\r\nimport logo from \"./../../images/logo.png\";\r\nimport grade from \"./../../util/grade\";\r\nimport mpg from \"../../util/mpg\";\r\nimport ReactWaterMark from \"react-watermark-component\";\r\n\r\nexport class GPATable extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      class: \"10\",\r\n      roll: 1,\r\n      results: [\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          marksInfo: {},\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n        {\r\n          Name: \"\",\r\n          Roll: \"\",\r\n          class: \"\",\r\n          marksInfo: {},\r\n          percentage: \"\",\r\n        },\r\n      ],\r\n\r\n      subjects: [],\r\n      FullMarks: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState(\r\n      () => {\r\n        return {\r\n          roll: this.props.location.search.split(\"&\")[2],\r\n          class: this.props.location.search.split(\"&\")[1],\r\n        };\r\n      },\r\n      async () => {\r\n        const { data } = await axios.get(\r\n          `${process.env.REACT_APP_HOST}/marksheet/${this.state.class}`\r\n        );\r\n        console.log(data.data);\r\n        const subjectData = await axios.get(\r\n          `${process.env.REACT_APP_HOST}/subject/${this.state.class}`\r\n        );\r\n        const subjects = subjectData.data.data;\r\n        console.log(subjects);\r\n        let subjectName = [];\r\n        subjects.forEach((subject) => {\r\n          let name = `${subject.Name}`;\r\n          subjectName.push(name);\r\n          name = \"\";\r\n        });\r\n        let FullMarks = {};\r\n        subjects.forEach((subject) => {\r\n          FullMarks[subject.Name] = subject.FullMarks;\r\n        });\r\n        this.setState(\r\n          (preState) => {\r\n            return {\r\n              ...preState,\r\n              results: data.data,\r\n              subjects: subjectName,\r\n              FullMarks,\r\n            };\r\n          },\r\n          () => {\r\n            window.print();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n  getAvgGPA = (value) => {\r\n    let sum = 0;\r\n    this.state.subjects.forEach((subject, index) => {\r\n      sum +=\r\n        subject === \"Health\" || subject === \"Moral\"\r\n          ? Number(this.state.results[value].marksInfo[subject] / 12.5) * 2\r\n          : Number(this.state.results[value].marksInfo[subject] / 25) * 4;\r\n    });\r\n    console.log(sum);\r\n    return sum / 32;\r\n  };\r\n\r\n  render() {\r\n    const roll = this.state.roll;\r\n\r\n    // const tableContent = this.state.results.map((result,index)=> {\r\n    //     return <tr key={result._id}>\r\n    //         <td className=\"tableDimension\">{result.Roll}</td>\r\n    //         <td className=\"tableDimension\">{result.Name}</td>\r\n\r\n    //         {this.state.subjects.map((subject, index) => {\r\n\r\n    //             return <td className=\"tableDimension\" key={index}>{result.marksInfo[subject]}</td>\r\n    //         })}\r\n    //         <td className=\"tableDimension\">{result.percentage}</td>\r\n    //         <td className=\"tableDimension\">{grade(result.percentage)}</td>\r\n    //     </tr>\r\n    // })\r\n    console.log(this.props.location.search);\r\n    let contentCss =\r\n      this.state.subjects.length === 10\r\n        ? {\r\n            borderLeft: \"1px solid black\",\r\n            borderRight: \"1px solid black\",\r\n            padding: \"6px\",\r\n          }\r\n        : this.state.subjects.length < 8\r\n        ? {\r\n            borderLeft: \"1px solid black\",\r\n            borderRight: \"1px solid black\",\r\n            padding: \"11px\",\r\n          }\r\n        : {\r\n            borderLeft: \"1px solid black\",\r\n            borderRight: \"1px solid black\",\r\n            padding: \"10px\",\r\n          };\r\n    let total1 = 0;\r\n    let totalGPA1 = 0;\r\n    let totalMarks = 0;\r\n    let count = 0;\r\n    const tableContent1 = this.state.subjects.map((subject, index) => {\r\n      if (this.state.FullMarks[subject] !== \"Grade\") {\r\n        total1 =\r\n          total1 + Number(this.state.results[roll - 1].marksInfo[subject]);\r\n        totalGPA1 =\r\n          totalGPA1 +\r\n          Number(\r\n            mpg(\r\n              this.state.results[roll - 1].marksInfo[subject],\r\n              this.state.FullMarks[subject]\r\n            ).gradePoint\r\n          );\r\n        totalMarks = totalMarks + Number(this.state.FullMarks[subject]);\r\n        count++;\r\n      }\r\n      return (\r\n        <tr key={index}>\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {subject === \" सेरोफेरो\" ? \"Serofero\" : subject}\r\n          </td>\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {this.state.FullMarks[subject]}\r\n          </td>\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {this.state.FullMarks[subject] === \"Grade\"\r\n              ? \"\"\r\n              : this.state.results[roll - 1].marksInfo[subject]}\r\n          </td>\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {\r\n              mpg(\r\n                this.state.results[roll - 1].marksInfo[subject],\r\n                this.state.FullMarks[subject]\r\n              ).gradePoint\r\n            }\r\n          </td>\r\n          {/* <td key={index} className=\"text-center\">{this.state.results.marksInfo[subject]}</td> */}\r\n          {/* <td key={index} className=\"text-center\">{subject==='Health'||subject==='Moral'?2:4}</td> */}\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {this.state.FullMarks[subject] === \"Grade\"\r\n              ? this.state.results[roll - 1].marksInfo[subject]\r\n              : mpg(\r\n                  this.state.results[roll - 1].marksInfo[subject],\r\n                  this.state.FullMarks[subject]\r\n                ).grade}\r\n          </td>\r\n          {/* <td key={index} className=\"text-center\">{subject==='Health'||subject==='Moral'?this.state.results.marksInfo[subject]/12.5:this.state.results.marksInfo[subject]/25}</td>\r\n                 <td key={index} className=\"text-center\">{subject==='Health'||subject==='Moral'?(this.state.results.marksInfo[subject]/12.5)*2:(this.state.results.marksInfo[subject]/25)*4}</td> */}\r\n        </tr>\r\n      );\r\n    });\r\n    let total2 = 0;\r\n    let totalGPA2 = 0;\r\n    const tableContent2 = this.state.subjects.map((subject, index) => {\r\n      if (this.state.FullMarks[subject] !== \"Grade\") {\r\n        total2 = total2 + Number(this.state.results[roll].marksInfo[subject]);\r\n        totalGPA2 =\r\n          totalGPA2 +\r\n          Number(\r\n            mpg(\r\n              this.state.results[roll].marksInfo[subject],\r\n              this.state.FullMarks[subject]\r\n            ).gradePoint\r\n          );\r\n      }\r\n\r\n      return (\r\n        <tr key={index}>\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {subject}\r\n          </td>\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {this.state.FullMarks[subject]}\r\n          </td>\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {this.state.FullMarks[subject] === \"Grade\"\r\n              ? \"\"\r\n              : this.state.results[roll].marksInfo[subject]}\r\n          </td>\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {\r\n              mpg(\r\n                this.state.results[roll].marksInfo[subject],\r\n                this.state.FullMarks[subject]\r\n              ).gradePoint\r\n            }\r\n          </td>\r\n          {/* <td key={index} className=\"text-center\">{this.state.results.marksInfo[subject]}</td> */}\r\n          {/* <td key={index} className=\"text-center\">{subject==='Health'||subject==='Moral'?2:4}</td> */}\r\n          <td style={contentCss} key={index} className=\"text-center\">\r\n            {this.state.FullMarks[subject] === \"Grade\"\r\n              ? this.state.results[roll].marksInfo[subject]\r\n              : mpg(\r\n                  this.state.results[roll].marksInfo[subject],\r\n                  this.state.FullMarks[subject]\r\n                ).grade}\r\n          </td>\r\n          {/* <td key={index} className=\"text-center\">{subject==='Health'||subject==='Moral'?this.state.results.marksInfo[subject]/12.5:this.state.results.marksInfo[subject]/25}</td>\r\n                 <td key={index} className=\"text-center\">{subject==='Health'||subject==='Moral'?(this.state.results.marksInfo[subject]/12.5)*2:(this.state.results.marksInfo[subject]/25)*4}</td> */}\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    const padBlock =\r\n      this.state.subjects.length === 10\r\n        ? { padding: \"4px\" }\r\n        : this.state.subjects.length < 8\r\n        ? { padding: \"11px\" }\r\n        : { padding: \"8px\" };\r\n\r\n    return (\r\n      <>\r\n        <div className=\" main\">\r\n          <div className=\"floatLeft\">\r\n            <div className=\"card-body p-0\">\r\n              <h1 className=\"text-center p-1 \">\r\n                BUDDHA &nbsp; ADARSHA &nbsp; BOARDING &nbsp; SCHOOL\r\n              </h1>\r\n              <h2 className=\"text-center \">\r\n                DIP PATH, DHARAN-9, SUNSARI, NEPAL\r\n              </h2>\r\n              <h2 className=\"text-center \">FINAL TERM EXAM 2078 BS</h2>\r\n              <h2 className=\"text-center\">GRADE SHEET</h2>\r\n\r\n              <div className=\"row \">\r\n                <div className=\"col-md-4 text-center\"></div>\r\n                <div className=\"col-md-4 text-center\">\r\n                  <img\r\n                    style={{ maxWidth: \"50%\", maxHeight: \"60%\" }}\r\n                    src={logo}\r\n                    alt=\"Logo\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 text-center\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row  p-1\">\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-7\">\r\n                <p className=\"mb-1 text-left\">\r\n                  Class: {this.state.results[roll - 1].class}\r\n                </p>\r\n\r\n                <p className=\"mb-1 text-left\">\r\n                  Name: {this.state.results[roll - 1].Name}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-md-4 text-left\">\r\n                <p className=\"mb-1 text-left\">\r\n                  Roll No: {this.state.results[roll - 1].Roll}\r\n                </p>\r\n\r\n                <p className=\"mb-1 text-left\">A.Y: 2021-2022</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row p-1\">\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-10\">\r\n                <table style={{ width: \"100%\" }}>\r\n                  <thead>\r\n                    <tr>\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        Subjects\r\n                      </th>\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        Total{\" \"}\r\n                      </th>\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        Marks\r\n                      </th>\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        GPA\r\n                      </th>\r\n                      {/* <th className=\"tableHead\">Marks Obt</th>\r\n                                <th className=\"tableHead\">Credit Hrs</th> */}\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        Grade\r\n                      </th>\r\n                      {/* <th className=\"tableHead\">GPA</th>\r\n                                <th className=\"tableHead\">Total GPA</th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {tableContent1}\r\n                    <tr>\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      >\r\n                        Total\r\n                      </th>\r\n\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      >\r\n                        {totalMarks}\r\n                      </th>\r\n\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      >\r\n                        {total1}\r\n                      </th>\r\n\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      ></th>\r\n\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      >\r\n                        {grade(this.state.results[roll - 1].percentage)}\r\n                      </th>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"col-md-1\"></div>\r\n            </div>\r\n            <div className=\"row p-2\">\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-5\"></div>\r\n              <div className=\"col-md-5 \">\r\n                <p className=\"mb-1 text-right\">\r\n                  Total GPA Obtained: &nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {(totalGPA1 / count).toFixed(1)}\r\n                  </span>\r\n                </p>\r\n\r\n                <p className=\"mb-1 text-right\">\r\n                  Percentage: &nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {\" \"}\r\n                    {this.state.results[roll - 1].percentage}%\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"row \"\r\n              style={\r\n                this.state.subjects.length < 8\r\n                  ? { marginTop: \"60px\" }\r\n                  : { marginTop: \"30px\" }\r\n              }\r\n            >\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-2 bt\">\r\n                <p\r\n                  style={{ borderTop: \"1px solid black\" }}\r\n                  className=\"text-center\"\r\n                >\r\n                  Class Teacher\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-1\"></div>\r\n\r\n              <div className=\"col-md-2 bt\">\r\n                <p\r\n                  style={{ borderTop: \"1px solid black\" }}\r\n                  className=\"text-center\"\r\n                >\r\n                  School's Seal\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-2 bt\">\r\n                <p\r\n                  style={{ borderTop: \"1px solid black\" }}\r\n                  className=\"text-center\"\r\n                >\r\n                  Principal\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-1\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"floatRight\">\r\n            <div className=\"card-body p-0\">\r\n              <h1 className=\"text-center p-1 \">\r\n                BUDDHA &nbsp; ADARSHA &nbsp; BOARDING &nbsp; SCHOOL\r\n              </h1>\r\n              <h2 className=\"text-center \">\r\n                {\" \"}\r\n                DIP PATH, DHARAN-9, SUNSARI, NEPAL\r\n              </h2>\r\n              <h2 className=\"text-center \">FINAL TERM EXAM 2078 BS</h2>\r\n              <h2 className=\"text-center\">GRADE SHEET</h2>\r\n\r\n              <div className=\"row p-1 \">\r\n                <div className=\"col-md-4 text-center\"></div>\r\n                <div className=\"col-md-4 text-center\">\r\n                  <img\r\n                    style={{ maxWidth: \"50%\", maxHeight: \"60%\" }}\r\n                    src={logo}\r\n                    alt=\"Logo\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 text-center\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row  p-1\">\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-7\">\r\n                <p className=\"mb-1 text-left\">\r\n                  Class: {this.state.results[roll].class}\r\n                </p>\r\n\r\n                <p className=\"mb-1 text-left\">\r\n                  Name: {this.state.results[roll].Name}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-md-4 text-left\">\r\n                <p className=\"mb-1 text-left\">\r\n                  Roll No: {this.state.results[roll].Roll}\r\n                </p>\r\n\r\n                <p className=\"mb-1 text-left\">A.Y: 2021-2022</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row p-1\">\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-10\">\r\n                <table style={{ width: \"100%\" }}>\r\n                  <thead>\r\n                    <tr>\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        Subjects\r\n                      </th>\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        Total{\" \"}\r\n                      </th>\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        Marks\r\n                      </th>\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        GPA\r\n                      </th>\r\n                      {/* <th className=\"tableHead\">Marks Obt</th>\r\n                                <th className=\"tableHead\">Credit Hrs</th> */}\r\n                      <th\r\n                        className=\"border text-uppercase font-weight-bold text-center \"\r\n                        style={padBlock}\r\n                      >\r\n                        Grade\r\n                      </th>\r\n                      {/* <th className=\"tableHead\">GPA</th>\r\n                                <th className=\"tableHead\">Total GPA</th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {tableContent2}\r\n                    <tr>\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      >\r\n                        Total\r\n                      </th>\r\n\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      >\r\n                        {totalMarks}\r\n                      </th>\r\n\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      >\r\n                        {total2}\r\n                      </th>\r\n\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      ></th>\r\n\r\n                      <th\r\n                        style={padBlock}\r\n                        className=\"border text-uppercase font-weight-bold text-center\"\r\n                      >\r\n                        {grade(this.state.results[roll].percentage)}\r\n                      </th>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"col-md-1\"></div>\r\n            </div>\r\n            <div className=\"row p-2\">\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-5\"></div>\r\n              <div className=\"col-md-5 \">\r\n                <p className=\"mb-1 text-right\">\r\n                  Total GPA Obtained: &nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {(totalGPA2 / count).toFixed(1)}\r\n                  </span>\r\n                </p>\r\n\r\n                <p className=\"mb-1 text-right\">\r\n                  Percentage: &nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {\" \"}\r\n                    {this.state.results[roll].percentage}%\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"row \"\r\n              style={\r\n                this.state.subjects.length < 8\r\n                  ? { marginTop: \"60px\" }\r\n                  : { marginTop: \"30px\" }\r\n              }\r\n            >\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-2 bt\">\r\n                <p\r\n                  style={{ borderTop: \"1px solid black\" }}\r\n                  className=\"text-center\"\r\n                >\r\n                  Class Teacher\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-1\"></div>\r\n\r\n              <div className=\"col-md-2 bt\">\r\n                <p\r\n                  style={{ borderTop: \"1px solid black\" }}\r\n                  className=\"text-center\"\r\n                >\r\n                  School's Seal\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-2 bt\">\r\n                <p\r\n                  style={{ borderTop: \"1px solid black\" }}\r\n                  className=\"text-center\"\r\n                >\r\n                  Principal\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-1\"></div>\r\n              <div className=\"col-md-1\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <br></br>\r\n        <br></br>\r\n\r\n        <br></br>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\gradetoGPA.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\util\\mpg.js",["191","192"],"module.exports = (obtainedMarks, fullMarks) => {\r\n  var result, gradePoint, grade;\r\n  var obtainedMarks = Number(obtainedMarks);\r\n  var fullMarks = Number(fullMarks);\r\n  if (fullMarks === 100) {\r\n    if (obtainedMarks <= 100 && obtainedMarks >= 90) {\r\n      gradePoint = \"4.0\";\r\n      grade = \"A+\";\r\n    }\r\n    if (obtainedMarks < 90 && obtainedMarks >= 80) {\r\n      gradePoint = \"3.6\";\r\n      grade = \"A\";\r\n    }\r\n    if (obtainedMarks < 80 && obtainedMarks >= 70) {\r\n      gradePoint = \"3.2\";\r\n      grade = \"B+\";\r\n    }\r\n    if (obtainedMarks < 70 && obtainedMarks >= 60) {\r\n      gradePoint = \"2.8\";\r\n      grade = \"B\";\r\n    }\r\n    if (obtainedMarks < 60 && obtainedMarks >= 50) {\r\n      gradePoint = \"2.4\";\r\n      grade = \"C+\";\r\n    }\r\n    if (obtainedMarks < 50 && obtainedMarks >= 40) {\r\n      gradePoint = \"2.0\";\r\n      grade = \"C\";\r\n    }\r\n    if (obtainedMarks < 40 && obtainedMarks >= 30) {\r\n      gradePoint = \"1.6\";\r\n      grade = \"D+\";\r\n    }\r\n    if (obtainedMarks < 30) {\r\n      gradePoint = \"1.2\";\r\n      grade = \"D\";\r\n    }\r\n  } else {\r\n    if (obtainedMarks <= 50 && obtainedMarks >= 45) {\r\n      gradePoint = \"4.0\";\r\n      grade = \"A+\";\r\n    }\r\n    if (obtainedMarks < 45 && obtainedMarks >= 40) {\r\n      gradePoint = \"3.6\";\r\n      grade = \"A\";\r\n    }\r\n    if (obtainedMarks < 40 && obtainedMarks >= 35) {\r\n      gradePoint = \"3.2\";\r\n      grade = \"B+\";\r\n    }\r\n    if (obtainedMarks < 35 && obtainedMarks >= 30) {\r\n      gradePoint = \"2.8\";\r\n      grade = \"B\";\r\n    }\r\n    if (obtainedMarks < 30 && obtainedMarks >= 25) {\r\n      gradePoint = \"2.4\";\r\n      grade = \"C+\";\r\n    }\r\n    if (obtainedMarks < 25 && obtainedMarks >= 20) {\r\n      gradePoint = \"2.0\";\r\n      grade = \"C\";\r\n    }\r\n    if (obtainedMarks < 20 && obtainedMarks >= 15) {\r\n      gradePoint = \"1.6\";\r\n      grade = \"D+\";\r\n    }\r\n    if (obtainedMarks < 15) {\r\n      gradePoint = \"1.2\";\r\n      grade = \"D\";\r\n    }\r\n  }\r\n  result = {\r\n    obtainedMarks,\r\n    gradePoint,\r\n    grade,\r\n  };\r\n  return result;\r\n};\r\n","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\newResult\\newResult.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\newResult\\temporaryResult.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\configure\\configure.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\student\\student.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\studentDetails\\studentDetails.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\studentTable\\studentTable.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\attendance\\attendance.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\attendanceForm\\attendanceForm.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":2,"column":8,"nodeType":"199","messageId":"200","endLine":2,"endColumn":22},{"ruleId":"197","severity":1,"message":"201","line":38,"column":15,"nodeType":"199","messageId":"200","endLine":38,"endColumn":19},{"ruleId":"197","severity":1,"message":"202","line":39,"column":15,"nodeType":"199","messageId":"200","endLine":39,"endColumn":25},{"ruleId":"197","severity":1,"message":"203","line":40,"column":15,"nodeType":"199","messageId":"200","endLine":40,"endColumn":22},{"ruleId":"197","severity":1,"message":"204","line":2,"column":10,"nodeType":"199","messageId":"200","endLine":2,"endColumn":16},{"ruleId":"197","severity":1,"message":"205","line":3,"column":10,"nodeType":"199","messageId":"200","endLine":3,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":6,"column":5,"nodeType":"208","messageId":"209","endLine":9,"endColumn":6},{"ruleId":"210","severity":1,"message":"211","line":22,"column":25,"nodeType":"212","endLine":22,"endColumn":95},{"ruleId":"210","severity":1,"message":"213","line":39,"column":29,"nodeType":"212","endLine":39,"endColumn":142},{"ruleId":"214","severity":1,"message":"215","line":39,"column":29,"nodeType":"212","endLine":39,"endColumn":142},{"ruleId":"210","severity":1,"message":"213","line":43,"column":33,"nodeType":"212","endLine":43,"endColumn":66},{"ruleId":"210","severity":1,"message":"213","line":44,"column":33,"nodeType":"212","endLine":44,"endColumn":66},{"ruleId":"210","severity":1,"message":"213","line":45,"column":33,"nodeType":"212","endLine":45,"endColumn":66},{"ruleId":"210","severity":1,"message":"213","line":46,"column":33,"nodeType":"212","endLine":46,"endColumn":66},{"ruleId":"216","severity":1,"message":"217","line":26,"column":1,"nodeType":"218","endLine":29,"endColumn":2},{"ruleId":"197","severity":1,"message":"219","line":5,"column":10,"nodeType":"199","messageId":"200","endLine":5,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":117,"column":34,"nodeType":"222","messageId":"223","endLine":117,"endColumn":36},{"ruleId":"197","severity":1,"message":"198","line":7,"column":8,"nodeType":"199","messageId":"200","endLine":7,"endColumn":22},{"ruleId":"224","severity":1,"message":"225","line":3,"column":7,"nodeType":"199","messageId":"226","endLine":3,"endColumn":20},{"ruleId":"224","severity":1,"message":"227","line":4,"column":7,"nodeType":"199","messageId":"226","endLine":4,"endColumn":16},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'ReactWaterMark' is defined but never used.","Identifier","unusedVar","'text' is assigned a value but never used.","'beginAlarm' is assigned a value but never used.","'options' is assigned a value but never used.","'Result' is defined but never used.","'Transaction' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'util' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'obtainedMarks' is already defined.","redeclared","'fullMarks' is already defined.","no-global-assign","no-unsafe-negation"]