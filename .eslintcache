[{"D:\\PROJECTS\\bs1front\\bs1\\src\\index.js":"1","D:\\PROJECTS\\bs1front\\bs1\\src\\App.js":"2","D:\\PROJECTS\\bs1front\\bs1\\src\\AppRouting.js":"3","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\printBill\\printBill.js":"4","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\resultForm\\resultForm.js":"5","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\dashboard\\dashboard.js":"6","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\invoiceForm\\invoiceForm.js":"7","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\resultCard\\resultCard.js":"8","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjects\\subjects.js":"9","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\login\\login.js":"10","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\viewBill\\viewBill.js":"11","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\viewResult\\viewResult.js":"12","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\forms\\forms.js":"13","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\notify.js":"14","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\invoice\\invoice.js":"15","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\rightPanel\\rightPanel.js":"16","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\header\\header.js":"17","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\httpClient.js":"18","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjectDetails\\subjectDetails.js":"19","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\leftPanel\\leftPanel.js":"20","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\transaction\\transaction.js":"21","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\result\\result.js":"22","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjectTable\\subjectTable.js":"23","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\loader\\loader.js":"24","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\moment.js":"25","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\marksheet\\marksheet.js":"26","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\signTable\\signTable.js":"27","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\sheetTable\\sheetTable.js":"28","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\grade.js":"29","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\GPATable\\GPATable.js":"30","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\gradetoGPA.js":"31","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\mpg.js":"32"},{"size":391,"mtime":1610196736212,"results":"33","hashOfConfig":"34"},{"size":273,"mtime":1616407172234,"results":"35","hashOfConfig":"34"},{"size":1863,"mtime":1624456621902,"results":"36","hashOfConfig":"34"},{"size":11074,"mtime":1617354598687,"results":"37","hashOfConfig":"34"},{"size":968,"mtime":1613132387773,"results":"38","hashOfConfig":"34"},{"size":935,"mtime":1617726624535,"results":"39","hashOfConfig":"34"},{"size":1044,"mtime":1613132462926,"results":"40","hashOfConfig":"34"},{"size":14823,"mtime":1630514110917,"results":"41","hashOfConfig":"34"},{"size":1017,"mtime":1615803481201,"results":"42","hashOfConfig":"34"},{"size":2283,"mtime":1617544308875,"results":"43","hashOfConfig":"34"},{"size":925,"mtime":1613132201022,"results":"44","hashOfConfig":"34"},{"size":1053,"mtime":1615374091637,"results":"45","hashOfConfig":"34"},{"size":17767,"mtime":1618242384541,"results":"46","hashOfConfig":"34"},{"size":186,"mtime":1612867692570,"results":"47","hashOfConfig":"34"},{"size":15393,"mtime":1617354704304,"results":"48","hashOfConfig":"34"},{"size":1977,"mtime":1634105480533,"results":"49","hashOfConfig":"34"},{"size":2695,"mtime":1613131773303,"results":"50","hashOfConfig":"34"},{"size":480,"mtime":1617527783949,"results":"51","hashOfConfig":"34"},{"size":3790,"mtime":1617802769329,"results":"52","hashOfConfig":"34"},{"size":7319,"mtime":1615803114220,"results":"53","hashOfConfig":"34"},{"size":5912,"mtime":1617726798605,"results":"54","hashOfConfig":"34"},{"size":10836,"mtime":1617802468667,"results":"55","hashOfConfig":"34"},{"size":8631,"mtime":1634096637179,"results":"56","hashOfConfig":"34"},{"size":275,"mtime":1612518658916,"results":"57","hashOfConfig":"34"},{"size":328,"mtime":1612773910497,"results":"58","hashOfConfig":"34"},{"size":15782,"mtime":1634105224459,"results":"59","hashOfConfig":"34"},{"size":3154,"mtime":1618304503399,"results":"60","hashOfConfig":"34"},{"size":5016,"mtime":1630666912544,"results":"61","hashOfConfig":"34"},{"size":698,"mtime":1623510698999,"results":"62","hashOfConfig":"34"},{"size":25503,"mtime":1634270531128,"results":"63","hashOfConfig":"34"},{"size":453,"mtime":1617639627197,"results":"64","hashOfConfig":"34"},{"size":2254,"mtime":1634097821128,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"14hdus",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},"D:\\PROJECTS\\bs1front\\bs1\\src\\index.js",[],["140","141"],"D:\\PROJECTS\\bs1front\\bs1\\src\\App.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\AppRouting.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\printBill\\printBill.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\resultForm\\resultForm.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\dashboard\\dashboard.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\invoiceForm\\invoiceForm.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\resultCard\\resultCard.js",["142","143","144","145"],"import './resultCard.css';\r\nimport ReactWaterMark from 'react-watermark-component';\r\nimport React from 'react';\r\nimport logo from './../../images/logo.png';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Axios from 'axios'\r\n\r\nclass ResultCardWithoutRouter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            marksInfo: [],\r\n            result: {\r\n                fullMarksArray: []\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n        Axios.get(`${process.env.REACT_APP_HOST}/result/${this.props.match.params.id}`)\r\n            .then(data => {\r\n                this.setState(preState => {\r\n                    return {\r\n                        ...preState,\r\n                        result: data.data.data.data,\r\n                        marksInfo: data.data.data.data.marksInfo\r\n\r\n                    }\r\n                }, () => {\r\n                    if (!this.props.view) {\r\n                        window.print()\r\n                    }\r\n                })\r\n            }).catch(e => console.log(e.response))\r\n    }\r\n    render() {\r\n        console.log(this.state.marksInfo)\r\n        const text = `Buddha Addharsha`;\r\n        const beginAlarm = function () { console.log('start alarm'); };\r\n        const options = {\r\n            chunkWidth: 200,\r\n            chunkHeight: 60,\r\n            textAlign: 'left',\r\n            textBaseline: 'bottom',\r\n            globalAlpha: 0.17,\r\n            font: '18px Microsoft Yahei',\r\n            rotateAngle: -0.26,\r\n            fillStyle: '#07ad94'\r\n        }\r\n        return (<>\r\n            <div className=\"\">\r\n                {/* <ReactWaterMark waterMarkText={text}\r\n                    openSecurityDefense\r\n                    securityAlarm={beginAlarm}\r\n                    options={options}> */}\r\n\r\n\r\n                <div style={{marginTop:'80px'}} className=\"wrapper row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body p-0\">\r\n                                <h1 className=\"text-center p-2\">BUDDHA &nbsp; ADARSHA &nbsp; BOARDING &nbsp; SCHOOL</h1>\r\n                                <h2 className=\"text-center p-2\"> DHARAN-9, DIP PATH, SUNSARI, KOSHI, NEPAL</h2>\r\n                                <h2 className=\"text-center p-2\">FINAL TERM EXAM 2078 BS</h2>\r\n                                {/* {this.state.result.term}   */}\r\n                                <div className=\"row p-2\">\r\n                                    <div className=\"col-md-5 text-center\">\r\n                                        <img src={logo} alt=\"Logo\" />\r\n                                    </div>\r\n                                    <div className=\"col-md-7 text-left\">\r\n                                        <h2>GRADE SHEET</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row  p-5\">\r\n                                    <div className=\"col-md-1\">\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-4\">\r\n                                        <p className=\"mb-1 text-left\">Class: {this.state.result.class}</p>\r\n                                        <br />\r\n                                        <p className=\"mb-1 text-left\">Name: {this.state.result.Name}</p>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-4 text-right\">\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-3 text-left\">\r\n                                        <p>Roll No: {this.state.result.Roll}</p>\r\n\r\n                                        <p>A.Y. {this.state.result.annualYear}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row p-1\">\r\n                                    <div className=\"col-md-1\"></div>\r\n                                    <div className=\"col-md-10\">\r\n                                        <table className=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Subjects</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Total Marks</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Marks Obtained</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">GPA</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Grade</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.marksInfo.map((markInfo, index) => {\r\n                                                    return (\r\n                                                        <tr style={this.state.result.subjectsArray.length > 8 ? { font: \"small-caption\" } : null} key={index}>\r\n                                                            <td className=\"text-center\">{this.state.result.subjectsArray[index]}</td>\r\n                                                            <td className=\"text-center\">{this.state.result.fullMarksArray[index]}</td>\r\n                                                            <td className=\"text-center\">{markInfo[this.state.result.subjectsArray[index]].marks}</td>\r\n                                                            <td className=\"text-center\">{markInfo[this.state.result.subjectsArray[index]].gpa}</td>\r\n                                                            <td className=\"text-center\">{markInfo[this.state.result.subjectsArray[index]].grade}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n\r\n                                                <tr>\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">Total</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">{this.state.result.totalMarks}</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">{this.state.result.Total}</th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\"></th>\r\n\r\n                                                    <th className=\"border text-uppercase small font-weight-bold text-center\">{this.state.result.AvgGrade}</th>\r\n                                                </tr>\r\n                                                \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"col-md-1\"></div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row p-5\">\r\n                                <div className=\"col-md-1\">\r\n\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n\r\n\r\n                                </div>\r\n                                <div className=\"col-md-4 \">\r\n\r\n                                    <p className=\"mb-1 text-left\">Total GPA Obtained: &nbsp;&nbsp;&nbsp;&nbsp; <span style={{ fontWeight: 'bold' }}>{this.state.result.AvgGPA}</span></p>\r\n                                    <br />\r\n                                    <p className=\"mb-1 text-left\">Percentage: &nbsp;&nbsp;&nbsp;&nbsp;   <span style={{ fontWeight: 'bold' }}>  {this.state.result.percentage}%</span></p><br />\r\n                                    <p className=\"mb-1 text-left\">Attendance:   &nbsp;&nbsp;&nbsp;&nbsp;  {this.state.result.rank}</p>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"row \" style={{ marginTop: '30px' }}>\r\n                                <div className=\"col-md-1\"></div>\r\n                                <div className=\"col-md-1\"></div>\r\n                                <div className=\"col-md-2 bt\">\r\n                                    <p className=\"text-center\">Principal</p>\r\n                                </div>\r\n                                <div className=\"col-md-1\"></div>\r\n\r\n                                <div className=\"col-md-2 bt\">\r\n                                    <p className=\"text-center\">School's Seal</p>\r\n                                </div>\r\n                                <div className=\"col-md-1\"></div>\r\n                                <div className=\"col-md-2 bt\">\r\n                                    <p className=\"text-center\">Class Teacher</p>\r\n                                </div>\r\n                                <div className=\"col-md-1\"></div>\r\n                                <div className=\"col-md-1\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* </ReactWaterMark> */}\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <div style={{border:'none'}} className=\"wrapper row\">\r\n                    <div className=\"col-12\">\r\n                        <div className='card'>\r\n\r\n                            <div className=\"row p-5\">\r\n                                <div className=\"col-md-1\">\r\n\r\n                                </div>\r\n\r\n                                <div className=\"col-md-10 sm-table\">\r\n                                    <p className=\"text-center\">Marks and Grade Points</p>\r\n                                    <table className=\"table large\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Percentage(%)</th>\r\n                                                <th>Grade</th>\r\n                                                <th>Point</th>\r\n                                                <th>Remarks</th>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>90-100</td>\r\n                                                <td>A+</td>\r\n                                                <td>4.0</td>\r\n                                                <td>Outstanding</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>80-90</td>\r\n                                                <td>A</td>\r\n                                                <td>3.6</td>\r\n                                                <td>Excellent</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>70-80</td>\r\n                                                <td>B+</td>\r\n                                                <td>3.2</td>\r\n                                                <td>Very Good</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>60-70</td>\r\n                                                <td>B</td>\r\n                                                <td>2.8</td>\r\n                                                <td>good</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>50-60</td>\r\n                                                <td>C+</td>\r\n                                                <td>2.4</td>\r\n                                                <td>Satisfactory</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>40-50</td>\r\n                                                <td>C</td>\r\n                                                <td>2</td>\r\n                                                <td>Acceptable</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>30-40</td>\r\n                                                <td>D+</td>\r\n                                                <td>1.6</td>\r\n                                                <td>Partly Acceptable</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>20-30</td>\r\n                                                <td>D</td>\r\n                                                <td>1.2</td>\r\n                                                <td>Insufficient</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                                <div className=\"col-md-1 text-left\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport const ResultCard = withRouter(ResultCardWithoutRouter);","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjects\\subjects.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\login\\login.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\viewBill\\viewBill.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\viewResult\\viewResult.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\forms\\forms.js",["146","147"],"\r\nimport React from 'react';\r\nimport Axios from 'axios';\r\nimport { notify } from '../../util/notify';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nclass FormWithoutRouter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            class: 'Nursery',\r\n            sheet: 'marksheet',\r\n            isLoading: false,\r\n            term: 'First',\r\n            annualYear: '2020-2021',\r\n            subjects: {},\r\n            fullMarks: {},\r\n            Name: '',\r\n            Roll: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n            const subjects = await Axios.get(`${process.env.REACT_APP_HOST}/subject/${this.state.class}`);\r\n            let newSubjects = {};\r\n            let newFullMarks = {}\r\n            subjects.data.data.map((subject) => {\r\n                newSubjects[subject.Name] = 0;\r\n                newFullMarks[subject.Name] = subject.FullMarks\r\n            })\r\n            this.setState((preState) => {\r\n                return {\r\n                    ...preState,\r\n                    subjects: newSubjects,\r\n                    fullMarks: newFullMarks\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                [name]: value\r\n            }\r\n        }, async () => {\r\n            if (this.state.sheet!=='marksheet') {\r\n                try {\r\n                   if(this.state.Roll!==''){\r\n                    const {data} = await Axios.get(`${process.env.REACT_APP_HOST}/marksheet/${this.state.class}/${this.state.Roll}`)\r\n                    const marksInfo = data.data.marksInfo;\r\n                    \r\n                    this.setState((prevState)=>{\r\n                        return{\r\n                            ...prevState,\r\n                            Name: data.data.Name?data.data.Name:prevState.Name,\r\n                            subjects: marksInfo\r\n                        }\r\n                    })\r\n                   }else{\r\n                       return\r\n                   }\r\n                }catch(e){\r\n                    console.log(e)\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n    handleSubject = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                subjects: {\r\n                    ...preState.subjects,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                isLoading: true\r\n            }\r\n        }, () => {\r\n            Axios.post(`${process.env.REACT_APP_HOST}/marksheet`, this.state, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                responseType: 'json'\r\n            }).then(data => {\r\n                notify.success('Succesfully added to the marksheet')\r\n                this.setState({\r\n                    isLoading: false\r\n                })\r\n                this.props.history.push('/dashboard?marksheet=true');\r\n            }).catch(err => console.log(err.response))\r\n        })\r\n    }\r\n\r\n    createResult = (e) => {\r\n        e.preventDefault();\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                isLoading: true\r\n            }\r\n        }, () => {\r\n            Axios.post(`${process.env.REACT_APP_HOST}/result`, this.state, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                responseType: 'json'\r\n            }).then(data => {\r\n                notify.success(data.data.msg)\r\n                this.props.history.push('/dashboard?result=true')\r\n            }).catch(err => console.log(err.response))\r\n        })\r\n    }\r\n\r\n    handleClass = async (e) => {\r\n        const { name, value } = e.target;\r\n        try {\r\n            const subjects = await Axios.get(`${process.env.REACT_APP_HOST}/subject/${value}`);\r\n            let newSubjects = {};\r\n            let newFullMarks = {};\r\n            subjects.data.data.map((subject) => {\r\n                newSubjects[subject.Name] = 0;\r\n                newFullMarks[subject.Name] = subject.FullMarks;\r\n            })\r\n            this.setState((preState) => {\r\n                return {\r\n                    ...preState,\r\n                    [name]: value,\r\n                    subjects: newSubjects,\r\n                    fullMarks: newFullMarks\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.state);\r\n\r\n\r\n\r\n        const subjectArrayDefault = Object.keys(this.state.subjects)\r\n\r\n        let subjects = subjectArrayDefault.map((subject, index) => {\r\n            return (<div key={index} className=\"form-group\"><label htmlFor=\"street\" className=\" form-control-label\">{subject}<h4 style={{ display: 'inline' }}>&nbsp;({this.state.fullMarks[subject]})</h4></label>{this.state.fullMarks[subject] === 'Grade' ? <select value={this.state.subjects[subject]} className=\"form-control\" onChange={this.handleSubject} name={subject}>\r\n                <option value='A+'>A+</option>\r\n                <option value='A'>A</option>\r\n                <option value='B+'>B+</option>\r\n                <option value='B'>B</option>\r\n                <option value='C+'>C+</option>\r\n                <option value='C'>C</option>\r\n                <option value='D+'>D+</option>\r\n                <option value='D'>D</option>\r\n            </select> : <input type=\"number\" value={this.state.subjects[subject]===0?'':this.state.subjects[subject]} className=\"form-control\" onChange={this.handleSubject} name={subject} />}</div>)\r\n        })\r\n\r\n        let btnM = this.state.isLoading ? <button id=\"payment-button\" disabled={true} onClick={this.handleClick} type=\"submit\" className=\"btn btn-lg btn-info btn-block\">\r\n            &nbsp;\r\n                <span id=\"payment-button-amount\">Adding</span>\r\n\r\n        </button> : <button id=\"payment-button\" onClick={this.handleClick} type=\"submit\" className=\"btn btn-lg btn-info btn-block\">\r\n            &nbsp;\r\n                    <span id=\"payment-button-amount\">Add to Marksheet</span>\r\n\r\n        </button>\r\n\r\n        let btnR = this.state.isLoading ? <button id=\"payment-button\" disabled={true} type=\"submit\" className=\"btn btn-lg btn-info btn-block\">\r\n            &nbsp;\r\n            <span id=\"payment-button-amount\">Generating</span>\r\n\r\n        </button> : <button id=\"payment-button\" onClick={this.createResult} type=\"submit\" className=\"btn btn-lg btn-info btn-block\">\r\n            &nbsp;\r\n                                <span id=\"payment-button-amount\">Generate ResultCard</span>\r\n\r\n        </button>\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"animated fadeIn\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <strong className=\"card-title\">Student Info</strong>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {/* Credit Card */}\r\n                                    <div id=\"pay-invoice\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"card-title\">\r\n                                                <h3 className=\"text-center\">Student Details</h3>\r\n                                            </div>\r\n                                            <hr />\r\n                                            <form action=\"#\" method=\"post\" noValidate=\"novalidate\">\r\n                                                <div className=\"form-group text-center\">\r\n                                                    <ul className=\"list-inline\">\r\n                                                        <li className=\"list-inline-item\"><i className=\"text-muted fa fa-cc-visa fa-2x\" /></li>\r\n                                                        <li className=\"list-inline-item\"><i className=\"fa fa-cc-mastercard fa-2x\" /></li>\r\n                                                        <li className=\"list-inline-item\"><i className=\"fa fa-cc-amex fa-2x\" /></li>\r\n                                                        <li className=\"list-inline-item\"><i className=\"fa fa-cc-discover fa-2x\" /></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label className=\"control-label mb-1\">Sheet</label>\r\n                                                    <select name=\"sheet\" onChange={this.handleChange} className='form-control'>\r\n                                                        <option value=\"marksheet\">Marksheet</option>\r\n                                                        <option value=\"resultCard\">ResultCard</option>\r\n\r\n                                                    </select>\r\n                                                </div>\r\n                                                {this.state.sheet === 'resultCard' ? <div className=\"row\">\r\n                                                    <div className=\"col-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label className=\"control-label mb-1\">Term</label>\r\n                                                            <select name=\"term\" onChange={this.handleChange} className='form-control'>\r\n                                                                <option value=\"First\">First</option>\r\n                                                                <option value=\"Second\">Second</option>\r\n                                                                <option value=\"Third\">Third</option>\r\n                                                                <option value=\"Final\">Final</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-6\">\r\n                                                        <label htmlFor=\"x_card_code\" className=\"control-label mb-1\">A.Y</label>\r\n                                                        <div className=\"input-group\">\r\n                                                            <select name=\"annualYear\" onChange={this.handleChange} className='form-control'>\r\n                                                                <option value=\"2020-2021\">2020-2021</option>\r\n                                                                <option value=\"2021-2022\">2021-2022</option>\r\n                                                                <option value=\"2022-2023\">2022-2023</option>\r\n                                                                <option value=\"2023-2024\">2023-2024</option>\r\n                                                            </select>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div> : null}\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"cc-exp\" className=\"control-label mb-1\">Class</label>\r\n                                                            <select name=\"class\" onChange={this.handleClass} className='form-control'>\r\n                                                                <option value=\"Nursery\">Nursery</option>\r\n                                                                <option value=\"KG\">KG</option>\r\n                                                                <option value=\"1\">1</option>\r\n                                                                <option value=\"2\">2</option>\r\n                                                                <option value=\"3\">3</option>\r\n                                                                <option value=\"4\">4</option>\r\n                                                                <option value=\"5\">5</option>\r\n                                                                <option value=\"6\">6</option>\r\n                                                                <option value=\"7\">7</option>\r\n                                                                <option value=\"8\">8</option>\r\n                                                                <option value=\"9\">9</option>\r\n                                                                <option value=\"10\">10</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-6\">\r\n                                                    <label htmlFor=\"cc-number\" className=\"control-label mb-1\">Roll number</label>\r\n                                                    <input id=\"cc-number\" onChange={this.handleChange} name=\"Roll\" type=\"number\" className=\"form-control cc-number identified visa\" defaultValue data-val=\"true\" data-val-required=\"Please enter the card number\" data-val-cc-number=\"Please enter a valid card number\" />\r\n                                                    <span className=\"help-block\" data-valmsg-for=\"cc-number\" data-valmsg-replace=\"true\" />\r\n                                                </div>\r\n                                                \r\n                                                </div>\r\n                                                \r\n                                                <div className=\"row\">\r\n                                                <div className={this.state.sheet==='marksheet'?`form-group has-success col-12`:`form-group has-success col-6`}>\r\n                                                    <label htmlFor=\"cc-name\" className=\"control-label mb-1\">Name</label>\r\n                                                    <input defaultValue={this.state.Name} id=\"cc-name\" onChange={this.handleChange} name=\"Name\" type=\"text\" className=\"form-control cc-name valid\" data-val=\"true\" data-val-required=\"Please enter the name on card\" autoComplete=\"cc-name\" aria-required=\"true\" aria-invalid=\"false\" aria-describedby=\"cc-name\" />\r\n                                                    <span className=\"help-block field-validation-valid\" data-valmsg-for=\"cc-name\" data-valmsg-replace=\"true\" />\r\n                                                </div>\r\n                                              \r\n                                                    {this.state.sheet === 'marksheet' ? null : <div className=\"col-6\">\r\n                                                        <label htmlFor=\"x_card_code\" className=\"control-label mb-1\">Attendance</label>\r\n                                                        <div className=\"input-group\">\r\n                                                            <input onChange={this.handleChange} id=\"x_card_code\" name=\"rank\" type=\"text\" className=\"form-control cc-cvc\" />\r\n                                                            <div className=\"input-group-addon\">\r\n                                                                <span className=\"fa fa-question-circle fa-lg\" data-toggle=\"popover\" data-container=\"body\" data-html=\"true\" data-title=\"Security Code\" data-content=\"<div class='text-center one-card'>The 3 digit code on back of the card..<div class='visa-mc-cvc-preview'></div></div>\" data-trigger=\"hover\" />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>}\r\n                                                </div>\r\n                                                <div>\r\n\r\n                                                    {this.state.sheet === 'marksheet' ? btnM : btnR}\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> {/* .card */}\r\n                        </div>{/*/.col*/}\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\"><strong>Subjects</strong></div>\r\n                                <div className=\"card-body card-block\">\r\n\r\n                                    {subjects}\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Form = withRouter(FormWithoutRouter);","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\notify.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\invoice\\invoice.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\rightPanel\\rightPanel.js",["148","149"],"import React from 'react';\r\nimport { Result } from '../../result/result';\r\nimport { Transaction } from '../../transaction/transaction';\r\nimport { Header } from '../header/header';\r\nimport { Marksheet } from './../../marksheet/marksheet';\r\n\r\n\r\nexport class RightPanel extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      component: 'transaction'\r\n    }\r\n  }\r\n  handleTransaction = () => {\r\n    this.setState({\r\n      component: 'transaction'\r\n    })\r\n  }\r\n  handleResult = () => {\r\n    this.setState({\r\n      component: 'result'\r\n    })\r\n  }\r\n  handleMarksheet = () => {\r\n    this.setState({\r\n      component: 'marksheet'\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.result==='result') {\r\n      this.setState({\r\n        component: 'result'\r\n      })\r\n    }\r\n    else if(this.props.result === 'marksheet') {\r\n      this.setState({\r\n        component: 'marksheet'\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let activebutton = 'btn-primary active';\r\n    let component = this.state.component;\r\n    switch (component) {\r\n      // case 'result':\r\n      //   component = (<Result></Result>)\r\n      //   break;\r\n      // case 'transaction':\r\n      //   component = (<Transaction></Transaction>)\r\n      //   break;\r\n      default:\r\n        component = (<Marksheet></Marksheet>)\r\n    }\r\n    return (\r\n      <div id=\"right-panel\" className=\"right-panel\">\r\n        <Header sidebar={this.props.changeSidebar} ></Header>\r\n        <div className=\"content\">\r\n          {/* <button onClick={this.handleTransaction} className={`btn m-1 ${this.state.component === 'transaction' ? activebutton : null}`} >Transactions</button>\r\n          <button onClick={this.handleResult} className={`btn m-1 ${this.state.component === 'result' ? activebutton : null}`}>Result</button> */}\r\n          <button onClick={this.handleMarksheet} className={`btn m-1 ${ activebutton}`}>Marksheet</button>\r\n          {component}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\header\\header.js",["150","151","152","153","154","155","156","157"],"import React from 'react';\r\nimport logo from './../../../images/logo.png';\r\nimport './header.css';\r\n\r\nexport class Header extends React.Component {\r\n    constructor() {\r\n        super();\r\n      \r\n    }\r\n\r\n    clickHandler=()=>{\r\n        this.props.sidebar();\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <header id=\"header\" className=\"header\">\r\n                <div className=\"top-left\">\r\n                    <div className=\"navbar-header\">\r\n                        {/* <img className=\"user-avatar rounded-circle\" src={logo} alt=\"User Avatar\" /> */}\r\n                        {/* <a className=\"navbar-brand logo\" href=\"./\"><img  className=\"logo\" src={logo} alt=\"Logo\" /></a> */}\r\n                        <a onClick={this.clickHandler} id=\"menuToggle\" className=\"menutoggle\"><i className=\"fa fa-bars\" /></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"top-right\">\r\n                    <div className=\"header-menu\">\r\n                        <div className=\"header-left\">\r\n                            <button className=\"search-trigger\"><i className=\"fa fa-search\" /></button>\r\n                            <div className=\"form-inline\">\r\n                                <form className=\"search-form\">\r\n                                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search ...\" aria-label=\"Search\" />\r\n                                    <button className=\"search-close\" type=\"submit\"><i className=\"fa fa-close\" /></button>\r\n                                </form>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"user-area dropdown float-right\">\r\n                            <a href=\"#\" className=\"dropdown-toggle active\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <img className=\"user-avatar rounded-circle\" src={logo} alt=\"User Avatar\" />\r\n                            </a>\r\n                            <div className=\"user-menu dropdown-menu\">\r\n                                <a className=\"nav-link\" href=\"#\"><i className=\"fa fa- user\" />My Profile</a>\r\n                                <a className=\"nav-link\" href=\"#\"><i className=\"fa fa- user\" />Notifications <span className=\"count\">13</span></a>\r\n                                <a className=\"nav-link\" href=\"#\"><i className=\"fa fa -cog\" />Settings</a>\r\n                                <a className=\"nav-link\" href=\"#\"><i className=\"fa fa-power -off\" />Logout</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","D:\\PROJECTS\\bs1front\\bs1\\src\\util\\httpClient.js",["158"],"import axios from 'axios';\r\n\r\nconst headers = {\r\n    \"Content-Type\": 'application/json',\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n}\r\n\r\nconst http = axios.create({\r\n    baseURL: process.env.REACT_APP_HOST,\r\n    responseType: 'json'\r\n})\r\n\r\nfunction get(url,params={}){\r\n    return http.get(url,{\r\n        headers\r\n    })\r\n}\r\n\r\nfunction post(url,data,params={}){\r\n    return http.post(url,data,{\r\n        headers,\r\n        params\r\n    })\r\n}\r\n\r\nexport default {\r\n    get,\r\n    post\r\n}","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjectDetails\\subjectDetails.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\leftPanel\\leftPanel.js",["159","160"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n \r\nexport const LeftPanel = (props) => {\r\n    return (\r\n        <aside id=\"left-panel\" className=\"left-panel\">\r\n            <nav className=\"navbar navbar-expand-sm navbar-default\">\r\n                <div id=\"main-menu\" className=\"main-menu collapse navbar-collapse\">\r\n                    <ul className=\"nav navbar-nav\">\r\n                        <li className={props.active==='dashboard'?'active':''}>\r\n                            <Link to= '/dashboard'><i className=\"menu-icon fa fa-laptop\" />Dashboard </Link>\r\n                        </li>   \r\n                        <li className=\"menu-title\">Admin Panel</li>{/* /.menu-title */}\r\n                        <li className=\"menu-item-has-children dropdown\">\r\n                            <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"menu-icon fa fa-cogs\" />Students</a>\r\n                            <ul className=\"sub-menu children dropdown-menu\">                            <li><i className=\"fa fa-puzzle-piece\" /><a href=\"ui-buttons.html\">Buttons</a></li>\r\n                                <li><i className=\"fa fa-id-badge\" /><a href=\"ui-badges.html\">Badges</a></li>\r\n                                <li><i className=\"fa fa-bars\" /><a href=\"ui-tabs.html\">Tabs</a></li>\r\n                                <li><i className=\"fa fa-id-card-o\" /><a href=\"ui-cards.html\">Cards</a></li>\r\n                                <li><i className=\"fa fa-exclamation-triangle\" /><a href=\"ui-alerts.html\">Alerts</a></li>\r\n                                <li><i className=\"fa fa-spinner\" /><a href=\"ui-progressbar.html\">Progress Bars</a></li>\r\n                                <li><i className=\"fa fa-fire\" /><a href=\"ui-modals.html\">Modals</a></li>\r\n                                <li><i className=\"fa fa-book\" /><a href=\"ui-switches.html\">Switches</a></li>\r\n                                <li><i className=\"fa fa-th\" /><a href=\"ui-grids.html\">Grids</a></li>\r\n                                <li><i className=\"fa fa-file-word-o\" /><a href=\"ui-typgraphy.html\">Typography</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className={props.active==='billing'?'active':''}>\r\n                            <Link to=\"/invoice\" > <i className=\"menu-icon fa fa-table\" />Billing</Link>\r\n                            <ul className=\"sub-menu children dropdown-menu\">\r\n                                <li><i className=\"fa fa-table\" /><a href=\"tables-basic.html\">Basic Table</a></li>\r\n                                <li><i className=\"fa fa-table\" /><a href=\"tables-data.html\">Data Table</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li  className={props.active==='result'?'active':''}>\r\n                            <Link to=\"/result\" className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"menu-icon fa fa-th\" />Result</Link>\r\n                            <ul className=\"sub-menu children dropdown-menu\">\r\n                                <li><i className=\"menu-icon fa fa-th\" /><a href=\"forms-basic.html\">Basic Form</a></li>\r\n                                <li><i className=\"menu-icon fa fa-th\" /><a href=\"forms-advanced.html\">Advanced Form</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className={props.active==='subject'?'active':''}>\r\n                            <Link to=\"/subjects\" > <i className=\"menu-icon fa fa-table\" />Subjects</Link>\r\n                            <ul className=\"sub-menu children dropdown-menu\">\r\n                                <li><i className=\"fa fa-table\" /><a href=\"tables-basic.html\">Basic Table</a></li>\r\n                                <li><i className=\"fa fa-table\" /><a href=\"tables-data.html\">Data Table</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        {/* <li className=\"menu-title\">Icons</li>\r\n                        <li className=\"menu-item-has-children dropdown\">\r\n                            <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"menu-icon fa fa-tasks\" />Icons</a>\r\n                            <ul className=\"sub-menu children dropdown-menu\">\r\n                                <li><i className=\"menu-icon fa fa-fort-awesome\" /><a href=\"font-fontawesome.html\">Font Awesome</a></li>\r\n                                <li><i className=\"menu-icon ti-themify-logo\" /><a href=\"font-themify.html\">Themefy Icons</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"widgets.html\"> <i className=\"menu-icon ti-email\" />Widgets </a>\r\n                        </li>\r\n                        <li className=\"menu-item-has-children dropdown\">\r\n                            <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"menu-icon fa fa-bar-chart\" />Charts</a>\r\n                            <ul className=\"sub-menu children dropdown-menu\">\r\n                                <li><i className=\"menu-icon fa fa-line-chart\" /><a href=\"charts-chartjs.html\">Chart JS</a></li>\r\n                                <li><i className=\"menu-icon fa fa-area-chart\" /><a href=\"charts-flot.html\">Flot Chart</a></li>\r\n                                <li><i className=\"menu-icon fa fa-pie-chart\" /><a href=\"charts-peity.html\">Peity Chart</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className=\"menu-item-has-children dropdown\">\r\n                            <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"menu-icon fa fa-area-chart\" />Maps</a>\r\n                            <ul className=\"sub-menu children dropdown-menu\">\r\n                                <li><i className=\"menu-icon fa fa-map-o\" /><a href=\"maps-gmap.html\">Google Maps</a></li>\r\n                                <li><i className=\"menu-icon fa fa-street-view\" /><a href=\"maps-vector.html\">Vector Maps</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className=\"menu-title\">Extras</li>\r\n                        <li className=\"menu-item-has-children dropdown\">\r\n                            <a href=\"#\" className=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i className=\"menu-icon fa fa-glass\" />Pages</a>\r\n                            <ul className=\"sub-menu children dropdown-menu\">\r\n                                <li><i className=\"menu-icon fa fa-sign-in\" /><a href=\"page-login.html\">Login</a></li>\r\n                                <li><i className=\"menu-icon fa fa-sign-in\" /><a href=\"page-register.html\">Register</a></li>\r\n                                <li><i className=\"menu-icon fa fa-paper-plane\" /><a href=\"pages-forget.html\">Forget Pass</a></li>\r\n                            </ul>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>{/* /.navbar-collapse */}\r\n            </nav>\r\n        </aside>\r\n    )\r\n}","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\transaction\\transaction.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\result\\result.js",["161"],"import React from 'react';\r\nimport Axios from 'axios';\r\nimport { Loader } from '../common/loader/loader';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { util } from './../../util/moment';\r\nimport { notify } from '../../util/notify';\r\n\r\nclass ResultWithoutRouter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            results: [],\r\n            isLoading: false,\r\n            class: 'All'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(prevState => {\r\n            return {\r\n                isLoading: !prevState.isLoading\r\n            }\r\n        }, () => {\r\n            Axios.get(`${process.env.REACT_APP_HOST}/result`)\r\n                .then(data => {\r\n                    const results = data.data.data;\r\n                    this.setState({\r\n                        results\r\n                    })\r\n\r\n                }).catch(err => {\r\n                    console.log(err.response)\r\n                }).finally(() => {\r\n                    this.setState((prevState) => {\r\n                        return {\r\n                            isLoading: !prevState.isLoading\r\n                        }\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n    handleClick = (id) => {\r\n        this.props.history.push(`/result/${id}`);\r\n    }\r\n\r\n    handlePrint = (id) => {\r\n        this.props.history.push(`/printResult/${id}`)\r\n    }\r\n    handleClass = (value) => {\r\n        this.setState(() => {\r\n            return {\r\n                isLoading: true\r\n            }\r\n        }, async () => {\r\n            try {\r\n                const { data } = await Axios.get(`${process.env.REACT_APP_HOST}/result/class/${value}`)\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        ...prevState,\r\n                        class: value,\r\n                        results: data,\r\n                        isLoading: false\r\n                    }\r\n                })\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        })\r\n    }\r\n    handleAll = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isLoading: !prevState.isLoading\r\n            }\r\n        }, () => {\r\n            Axios.get(`${process.env.REACT_APP_HOST}/result`)\r\n                .then(data => {\r\n                    const results = data.data.data;\r\n                    this.setState({\r\n                        results\r\n                    })\r\n\r\n                }).catch(err => {\r\n                    console.log(err.response)\r\n                }).finally(() => {\r\n                    this.setState((prevState) => {\r\n                        return {\r\n                            ...prevState,\r\n                            class: 'All',\r\n                            isLoading: !prevState.isLoading\r\n                        }\r\n                    })\r\n                })\r\n        })\r\n    }\r\n    handleDelete = async (id) => {\r\n        try {\r\n            const check = window.confirm('Are you sure you want to delete?');\r\n            if (check) {\r\n                const result = await Axios.delete(`${process.env.REACT_APP_HOST}/result/delete/${id}`)\r\n                notify.success(result.data.msg)\r\n                if (this.state.class !== 'All') {\r\n                    const { data } = await Axios.get(`${process.env.REACT_APP_HOST}/result/class/${this.state.class}`)\r\n                    this.setState((prevState) => {\r\n                        return {\r\n                            ...prevState,\r\n                            results: data,\r\n                        }\r\n                    })\r\n                } else {\r\n                    Axios.get(`${process.env.REACT_APP_HOST}/result`)\r\n                        .then(data => {\r\n                            const results = data.data.data;\r\n                            this.setState({\r\n                                results\r\n                            })\r\n\r\n                        }).catch(err => {\r\n                            console.log(err.response)\r\n                        }).finally(() => {\r\n                            this.setState((prevState) => {\r\n                                return {\r\n                                    ...prevState,\r\n                                    class: 'All'\r\n                                }\r\n                            })\r\n                        })\r\n\r\n            }\r\n        } else {\r\n            return\r\n        }\r\n    } catch(e) {\r\n        console.log(e)\r\n    }\r\n}\r\nrender() {\r\n\r\n    const tableContent = this.state.results.map((result, index) => {\r\n        return (<tr key={result._id}>\r\n            <td className=\"serial\">{index + 1}</td>\r\n\r\n            <td>{result.data.Name} </td>\r\n            <td>{result.data.term}</td>\r\n            <td>{result.data.class}</td>\r\n            <td>{result.data.Roll}</td>\r\n            <td>{result.data.AvgGPA}</td>\r\n            <td>{result.data.AvgGrade}</td>\r\n            <td>{result.data.percentage} %</td>\r\n            <td>\r\n                <span onClick={this.handleClick.bind(this, result._id)} className=\"badge badge-complete\">Details</span>\r\n            </td>\r\n\r\n            <td>\r\n                <button onClick={this.handlePrint.bind(this, result._id)} className=\"btn btn-info\">Print</button>\r\n                <button onClick={this.handleDelete.bind(this, result._id)} className=\"btn btn-danger m-1\">Delete</button>\r\n\r\n            </td>\r\n\r\n        </tr>)\r\n    })\r\n\r\n    let activebutton = 'btn-primary active';\r\n    return (\r\n        this.state.isLoading ?\r\n            <Loader></Loader> :\r\n            (<div className=\"orders\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-4\">\r\n\r\n                    </div> {/* /.col-md-4 */}\r\n                    <div className=\"col-xl-4\">\r\n\r\n                    </div> {/* /.col-md-4 */}\r\n                    <div className=\"col-xl-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-xl-12\">\r\n                                <div className=\"card bg-flat-color-3  \">\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title m-0  white-color \">Today's Date: </h4>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div id=\"flotLine5\" className=\"flot-line\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div> {/* /.col-md-4 */}\r\n                </div>\r\n\r\n                <div className=\"row \" style={{ marginBottom: \"10px\" }}>\r\n                    <div className=\"col-lg-12 col-xl-12\">\r\n                        <button onClick={this.handleAll} className={`btn m-1 ${this.state.class === 'All' ? activebutton : null}`}>All</button>\r\n                        <button onClick={this.handleClass.bind(this, 'Nursery')} className={`btn m-1 ${this.state.class === 'Nursery' ? activebutton : null}`}>Nursery</button>\r\n                        <button onClick={this.handleClass.bind(this, 'KG')} className={`btn m-1 ${this.state.class === 'KG' ? activebutton : null}`}>KG</button>\r\n                        <button onClick={this.handleClass.bind(this, '1')} className={`btn m-1 ${this.state.class === '1' ? activebutton : null}`}>1</button>\r\n                        <button onClick={this.handleClass.bind(this, '2')} className={`btn m-1 ${this.state.class === '2' ? activebutton : null}`}>2</button>\r\n                        <button onClick={this.handleClass.bind(this, '3')} className={`btn m-1 ${this.state.class === '3' ? activebutton : null}`}>3</button>\r\n                        <button onClick={this.handleClass.bind(this, '4')} className={`btn m-1 ${this.state.class === '4' ? activebutton : null}`}>4</button>\r\n                        <button onClick={this.handleClass.bind(this, '5')} className={`btn m-1 ${this.state.class === '5' ? activebutton : null}`}>5</button>\r\n                        <button onClick={this.handleClass.bind(this, '6')} className={`btn m-1 ${this.state.class === '6' ? activebutton : null}`}>6</button>\r\n                        <button onClick={this.handleClass.bind(this, '7')} className={`btn m-1 ${this.state.class === '7' ? activebutton : null}`}>7</button>\r\n                        <button onClick={this.handleClass.bind(this, '8')} className={`btn m-1 ${this.state.class === '8' ? activebutton : null}`}>8</button>\r\n                        <button onClick={this.handleClass.bind(this, '9')} className={`btn m-1 ${this.state.class === '9' ? activebutton : null}`}>9</button>\r\n                        <button onClick={this.handleClass.bind(this, '10')} className={`btn m-1 ${this.state.class === '10' ? activebutton : null}`}>10</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"box-title\">Result</h4>\r\n                            </div>\r\n                            <div className=\"card-body--\">\r\n                                <div className=\"table-stats order-table ov-h\">\r\n                                    <table className=\"table \">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"serial\">SN</th>\r\n\r\n\r\n                                                <th>Name</th>\r\n                                                <th>Term</th>\r\n                                                <th>Class</th>\r\n                                                <th>Roll No</th>\r\n                                                <th>Avg GPA</th>\r\n                                                <th>Avg Grade</th>\r\n                                                <th>Percentage</th>\r\n                                                <th>Details</th>\r\n\r\n                                                <th>More</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {tableContent}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div> {/* /.table-stats */}\r\n                            </div>\r\n                        </div> {/* /.card */}\r\n                    </div>  {/* /.col-lg-8 */}\r\n\r\n                </div>\r\n            </div>)\r\n    )\r\n}\r\n}\r\n\r\nexport const Result = withRouter(ResultWithoutRouter);","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\subjectTable\\subjectTable.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\common\\loader\\loader.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\util\\moment.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\marksheet\\marksheet.js",["162","163"],"import React from 'react';\r\nimport Axios from 'axios';\r\nimport { Loader } from '../common/loader/loader';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { notify } from '../../util/notify';\r\nimport Modal from 'react-modal';\r\n\r\nclass MarksheetWithoutRouter extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            results: [{\r\n                marksInfo: {}\r\n            }],\r\n            isLoading: false,\r\n            class: 'Nursery',\r\n            subjects: [{\r\n                Name: ''\r\n            }],\r\n            modalIsOpen: false,\r\n            currentResult: {\r\n                marksInfo: {},\r\n                index: ''\r\n            },\r\n            fullMarks: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState(prevState => {\r\n            return {\r\n                isLoading: !prevState.isLoading\r\n            }\r\n        }, () => {\r\n            Axios.get(`${process.env.REACT_APP_HOST}/marksheet/${this.state.class}`)\r\n                .then(async (data) => {\r\n                    const subjectData = await Axios.get(`${process.env.REACT_APP_HOST}/subject/${this.state.class}`)\r\n                    const subjects = subjectData.data.data\r\n                    let newFullMarks = {}\r\n                    subjects.map((subject) => {\r\n\r\n                        newFullMarks[subject.Name] = subject.FullMarks\r\n                    })\r\n                    const results = data.data.data;\r\n                    this.setState({\r\n                        results,\r\n                        subjects,\r\n                        fullMarks: newFullMarks\r\n                    })\r\n\r\n                }).catch(err => {\r\n                    console.log(err.response)\r\n                }).finally(() => {\r\n                    this.setState((prevState) => {\r\n                        return {\r\n                            isLoading: !prevState.isLoading\r\n                        }\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handlePrint = async (id) => {\r\n        try {\r\n\r\n            const check = window.confirm('Are you sure you want to delete?')\r\n            if (check) {\r\n                const prevClass = this.state.class\r\n                await Axios.delete(`${process.env.REACT_APP_HOST}/marksheet/delete/${id}`)\r\n                notify.success('Succesfully Deleted')\r\n                const { data } = await Axios.get(`${process.env.REACT_APP_HOST}/marksheet/${prevClass}`);\r\n                const results = data.data;\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        ...prevState,\r\n                        results,\r\n                        class: prevClass\r\n                    }\r\n                })\r\n\r\n            } else {\r\n                return\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    handleClass = (value) => {\r\n        this.setState(() => {\r\n            return {\r\n                isLoading: true\r\n            }\r\n        }, async () => {\r\n            try {\r\n                const subjectData = await Axios.get(`${process.env.REACT_APP_HOST}/subject/${value}`)\r\n                const subjects = subjectData.data.data\r\n                const { data } = await Axios.get(`${process.env.REACT_APP_HOST}/marksheet/${value}`)\r\n                const results = data.data\r\n                let newFullMarks = {}\r\n                subjects.map((subject) => {\r\n\r\n                    newFullMarks[subject.Name] = subject.FullMarks\r\n                })\r\n                this.setState((preState) => {\r\n                    return {\r\n                        ...preState,\r\n                        class: value,\r\n                        results,\r\n                        subjects,\r\n                        fullMarks: newFullMarks,\r\n                        isLoading: false\r\n                    }\r\n                })\r\n\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        })\r\n    }\r\n    handleEdit = async () => {\r\n        try {\r\n            const editedData = this.state.currentResult;\r\n            editedData.fullMarks = this.state.fullMarks;\r\n            await Axios.put(`${process.env.REACT_APP_HOST}/marksheet/edit/${editedData._id}`, editedData, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                responseType: 'json'\r\n            });\r\n            notify.success('Succefully Updated')\r\n            const { data } = await Axios.get(`${process.env.REACT_APP_HOST}/marksheet/${this.state.class}`)\r\n            const results = data.data\r\n            this.setState((preState) => {\r\n                return {\r\n                    ...preState,\r\n                    modalIsOpen: false,\r\n                    results\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    openModal = (index) => {\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                modalIsOpen: true,\r\n                currentResult: {\r\n                    ...preState.results[index]\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n    closeModal = () => {\r\n        this.setState((preState) => {\r\n            return {\r\n                ...preState,\r\n                modalIsOpen: false\r\n            }\r\n        })\r\n    }\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState(preState => {\r\n            return {\r\n                ...preState,\r\n                currentResult: {\r\n                    ...preState.currentResult,\r\n                    [name]: value,\r\n                    marksInfo: {\r\n                        ...preState.currentResult.marksInfo\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handleMarks = e => {\r\n        const { name, value } = e.target;\r\n        this.setState(preState => {\r\n            return {\r\n                ...preState,\r\n                currentResult: {\r\n                    ...preState.currentResult,\r\n                    marksInfo: {\r\n                        ...preState.currentResult.marksInfo,\r\n                        [name]: value\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick = ()=> {\r\n        \r\n        this.props.history.push(`/sheet?class=${this.state.class}`)\r\n    }\r\n\r\n    \r\n    handleDoublePrint = ()=> {\r\n        \r\n        this.props.history.push(`/gpatable?&${this.state.class}&${this.state.currentResult.index}`)\r\n    }\r\n    render() {\r\n\r\n        console.log(this.state)\r\n        const customStyles = {\r\n            content: {\r\n                top: '50%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                marginRight: '20%',\r\n                transform: 'translate(-50%, -50%)'\r\n            }\r\n        };\r\n\r\n\r\n        const tableHeadContent = this.state.subjects.map(subject => {\r\n            return <th key={subject._id}>{subject.Name}</th>\r\n        })\r\n\r\n\r\n        const tableContent = this.state.results.map((result, index) => {\r\n            return (<tr key={result._id}>\r\n                <td>{result.Roll}</td>\r\n                <td>{result.Name} </td>\r\n                \r\n                {this.state.subjects.map(({ Name, _id },) => {\r\n                    return <td key={_id} >{result.marksInfo[Name]}</td>\r\n                })}\r\n\r\n                <td>{result.percentage}%</td>\r\n                <td >\r\n                   \r\n                    <button onClick={this.openModal.bind(this, index)} className=\"btn btn-info m-1\">Edit</button>\r\n                   \r\n                    <button onClick={this.handlePrint.bind(this, result._id)} className=\"btn btn-danger\">Delete</button>\r\n                </td>\r\n\r\n            </tr>)\r\n        })\r\n\r\n        let activebutton = 'btn-primary active';\r\n        return (\r\n            this.state.isLoading ?\r\n                <Loader></Loader> :\r\n                (<>\r\n                    <div className=\"orders\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl-4\">\r\n\r\n                            </div> {/* /.col-md-4 */}\r\n                            <div className=\"col-xl-4\">\r\n\r\n                            </div> {/* /.col-md-4 */}\r\n                            <div className=\"col-xl-4\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-xl-12\">\r\n                                        <div className=\"card bg-flat-color-3  \">\r\n                                            <div className=\"card-body\">\r\n                                                <h4 className=\"card-title m-0  white-color \">Today's Date: </h4>\r\n                                            </div>\r\n                                            <div className=\"card-body\">\r\n                                                <div id=\"flotLine5\" className=\"flot-line\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> {/* /.col-md-4 */}\r\n                        </div>\r\n                        <div className=\"row \" style={{ marginBottom: \"10px\" }}>\r\n                            <div className=\"col-lg-12 col-xl-12\">\r\n                                <button onClick={this.handleClass.bind(this, 'Nursery')} className={`btn m-1 ${this.state.class === 'Nursery' ? activebutton : null}`}>Nursery</button>\r\n                                <button onClick={this.handleClass.bind(this, 'KG')} className={`btn m-1 ${this.state.class === 'KG' ? activebutton : null}`}>KG</button>\r\n                                <button onClick={this.handleClass.bind(this, '1')} className={`btn m-1 ${this.state.class === '1' ? activebutton : null}`}>1</button>\r\n                                <button onClick={this.handleClass.bind(this, '2')} className={`btn m-1 ${this.state.class === '2' ? activebutton : null}`}>2</button>\r\n                                <button onClick={this.handleClass.bind(this, '3')} className={`btn m-1 ${this.state.class === '3' ? activebutton : null}`}>3</button>\r\n                                <button onClick={this.handleClass.bind(this, '4')} className={`btn m-1 ${this.state.class === '4' ? activebutton : null}`}>4</button>\r\n                                <button onClick={this.handleClass.bind(this, '5')} className={`btn m-1 ${this.state.class === '5' ? activebutton : null}`}>5</button>\r\n                                <button onClick={this.handleClass.bind(this, '6')} className={`btn m-1 ${this.state.class === '6' ? activebutton : null}`}>6</button>\r\n                                <button onClick={this.handleClass.bind(this, '7')} className={`btn m-1 ${this.state.class === '7' ? activebutton : null}`}>7</button>\r\n                                <button onClick={this.handleClass.bind(this, '8')} className={`btn m-1 ${this.state.class === '8' ? activebutton : null}`}>8</button>\r\n                                <button onClick={this.handleClass.bind(this, '9')} className={`btn m-1 ${this.state.class === '9' ? activebutton : null}`}>9</button>\r\n                                <button onClick={this.handleClass.bind(this, '10')} className={`btn m-1 ${this.state.class === '10' ? activebutton : null}`}>10</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            \r\n                            <div className=\"col-xl-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        \r\n                                        <input type=\"number\" name=\"index\" onChange={this.handleChange} class=\"form-control\"  style={{maxWidth:'7%'}}/>\r\n                                        <button onClick={this.handleDoublePrint} className=\"btn btn-info m-1\">Print</button>\r\n                                        <button onClick={this.handleClick} className={`btn btn-success`} style={{ float: 'right' }}>View Marksheet</button>\r\n                                    </div>\r\n                                    <div className=\"card-body--\">\r\n                                        <div className=\"table-stats order-table ov-h\">\r\n                                            <table className=\"table \">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>Roll</th>\r\n                                                        <th>Name</th>\r\n                                                     \r\n                                                        {tableHeadContent}\r\n                                                        <th>Percent</th>\r\n                                                        <th>More</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {tableContent}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div> {/* /.table-stats */}\r\n                                    </div>\r\n                                </div> {/* /.card */}\r\n                            </div>  {/* /.col-lg-8 */}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Modal\r\n                        isOpen={this.state.modalIsOpen}\r\n                        onRequestClose={this.closeModal}\r\n                        style={customStyles}\r\n                        contentLabel=\"Edit Marksheet\"\r\n                    >\r\n\r\n                        {/* <h2 ref={_subtitle => (subtitle = _subtitle)}>Hello</h2> */}\r\n\r\n                        <form className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <label><h5>Name:</h5></label>\r\n                                    <input name=\"Name\" onChange={this.handleChange} className=\"form-control\" value={this.state.currentResult.Name} ></input>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <label><h5 className=\"pt-1\">Roll No:</h5></label>\r\n                                    <input type=\"text\" onChange={this.handleChange} name=\"Roll\" value={this.state.currentResult.Roll} className=\"form-control\" ></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                            {this.state.subjects.map(subject => {\r\n                                return <div className=\"col-4\">\r\n                                    <label><h5 className=\"pt-1\">{subject.Name}</h5></label>\r\n                                    <input type=\"text\" onChange={this.handleMarks} name={subject.Name} value={this.state.currentResult.marksInfo[subject.Name]} className=\"form-control\" ></input></div>\r\n                                \r\n                            })}\r\n                            </div>\r\n                        </form>\r\n                        <button className=\"btn btn-warning\" onClick={this.handleEdit}>Save Changes</button>\r\n                        <button className=\"btn btn-danger m-1\" onClick={this.closeModal}>Close</button>\r\n                    </Modal>\r\n                </>)\r\n        )\r\n    }\r\n}\r\n\r\nexport const Marksheet = withRouter(MarksheetWithoutRouter);","D:\\PROJECTS\\bs1front\\bs1\\src\\components\\signTable\\signTable.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\sheetTable\\sheetTable.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\util\\grade.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\components\\GPATable\\GPATable.js",["164"],"D:\\PROJECTS\\bs1front\\bs1\\src\\util\\gradetoGPA.js",[],"D:\\PROJECTS\\bs1front\\bs1\\src\\util\\mpg.js",["165","166"],"module.exports = (obtainedMarks, fullMarks)=>{\r\n    var result,gradePoint,grade;\r\n    var obtainedMarks = Number(obtainedMarks);\r\n    var fullMarks = Number(fullMarks);\r\n    if(fullMarks===100){\r\n        if(obtainedMarks<=100 && obtainedMarks>=91){\r\n            gradePoint = '4.0';\r\n            grade = 'A+'\r\n        }\r\n        if(obtainedMarks<=90 && obtainedMarks>=81){\r\n            gradePoint = '3.6';\r\n            grade = 'A'\r\n        }\r\n        if(obtainedMarks<=80 && obtainedMarks>=71){\r\n            gradePoint = '3.2';\r\n            grade = 'B+'\r\n        }\r\n        if(obtainedMarks<=70 && obtainedMarks>=61){\r\n            gradePoint = '2.8';\r\n            grade = 'B'\r\n        }\r\n        if(obtainedMarks<=60 && obtainedMarks>=51){\r\n            gradePoint = '2.4';\r\n            grade = 'C+'\r\n        }\r\n        if(obtainedMarks<=50 && obtainedMarks>=41){\r\n            gradePoint = '2.0';\r\n            grade = 'C'\r\n        }\r\n        if(obtainedMarks<=40 && obtainedMarks>=31){\r\n            gradePoint = '1.6';\r\n            grade = 'D+'\r\n        }\r\n        if(obtainedMarks<=30){\r\n            gradePoint ='1.2';\r\n            grade = 'D'\r\n        }\r\n        \r\n    }\r\n    else{  \r\n        if(obtainedMarks<=50 && obtainedMarks>=46){\r\n            gradePoint = '4.0';\r\n            grade = 'A+'\r\n        }\r\n        if(obtainedMarks<=45 && obtainedMarks>=41){\r\n            gradePoint = '3.6';\r\n            grade = 'A'\r\n        }\r\n        if(obtainedMarks<=40 && obtainedMarks>=36){\r\n            gradePoint = '3.2';\r\n            grade = 'B+'\r\n        }\r\n        if(obtainedMarks<=35 && obtainedMarks>=31){\r\n            gradePoint = '2.8';\r\n            grade = 'B'\r\n        }\r\n        if(obtainedMarks<=30 && obtainedMarks>=26){\r\n            gradePoint = '2.4';\r\n            grade = 'C+'\r\n        }\r\n        if(obtainedMarks<=25 && obtainedMarks>=21){\r\n            gradePoint = '2.0';\r\n            grade = 'C'\r\n        }\r\n        if(obtainedMarks<=20 && obtainedMarks>=16){\r\n            gradePoint = '1.6';\r\n            grade = 'D+'\r\n        }\r\n        if(obtainedMarks<=15){\r\n            gradePoint ='1.2';\r\n            grade = 'D'\r\n        }\r\n    }\r\n    result = {\r\n        obtainedMarks,\r\n        gradePoint,\r\n        grade\r\n    }\r\n    return result;\r\n}",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":22},{"ruleId":"171","severity":1,"message":"175","line":38,"column":15,"nodeType":"173","messageId":"174","endLine":38,"endColumn":19},{"ruleId":"171","severity":1,"message":"176","line":39,"column":15,"nodeType":"173","messageId":"174","endLine":39,"endColumn":25},{"ruleId":"171","severity":1,"message":"177","line":40,"column":15,"nodeType":"173","messageId":"174","endLine":40,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":31,"column":46,"nodeType":"180","messageId":"181","endLine":31,"endColumn":48},{"ruleId":"178","severity":1,"message":"179","line":134,"column":46,"nodeType":"180","messageId":"181","endLine":134,"endColumn":48},{"ruleId":"171","severity":1,"message":"182","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":16},{"ruleId":"171","severity":1,"message":"183","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":6,"column":5,"nodeType":"186","messageId":"187","endLine":9,"endColumn":6},{"ruleId":"188","severity":1,"message":"189","line":22,"column":25,"nodeType":"190","endLine":22,"endColumn":95},{"ruleId":"188","severity":1,"message":"191","line":39,"column":29,"nodeType":"190","endLine":39,"endColumn":142},{"ruleId":"192","severity":1,"message":"193","line":39,"column":29,"nodeType":"190","endLine":39,"endColumn":142},{"ruleId":"188","severity":1,"message":"191","line":43,"column":33,"nodeType":"190","endLine":43,"endColumn":66},{"ruleId":"188","severity":1,"message":"191","line":44,"column":33,"nodeType":"190","endLine":44,"endColumn":66},{"ruleId":"188","severity":1,"message":"191","line":45,"column":33,"nodeType":"190","endLine":45,"endColumn":66},{"ruleId":"188","severity":1,"message":"191","line":46,"column":33,"nodeType":"190","endLine":46,"endColumn":66},{"ruleId":"194","severity":1,"message":"195","line":26,"column":1,"nodeType":"196","endLine":29,"endColumn":2},{"ruleId":"188","severity":1,"message":"191","line":15,"column":29,"nodeType":"190","endLine":15,"endColumn":135},{"ruleId":"192","severity":1,"message":"193","line":15,"column":29,"nodeType":"190","endLine":15,"endColumn":135},{"ruleId":"171","severity":1,"message":"197","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":40,"column":44,"nodeType":"180","messageId":"181","endLine":40,"endColumn":46},{"ruleId":"178","severity":1,"message":"179","line":102,"column":40,"nodeType":"180","messageId":"181","endLine":102,"endColumn":42},{"ruleId":"171","severity":1,"message":"172","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":22},{"ruleId":"198","severity":1,"message":"199","line":3,"column":9,"nodeType":"173","messageId":"200","endLine":3,"endColumn":22},{"ruleId":"198","severity":1,"message":"201","line":4,"column":9,"nodeType":"173","messageId":"200","endLine":4,"endColumn":18},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'ReactWaterMark' is defined but never used.","Identifier","unusedVar","'text' is assigned a value but never used.","'beginAlarm' is assigned a value but never used.","'options' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Result' is defined but never used.","'Transaction' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'util' is defined but never used.","no-redeclare","'obtainedMarks' is already defined.","redeclared","'fullMarks' is already defined.","no-global-assign","no-unsafe-negation"]